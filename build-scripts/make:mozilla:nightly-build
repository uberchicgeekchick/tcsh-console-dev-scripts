#!/bin/tcsh -f
set mozilla_dir="/programs/Mozilla";
set tarball_backup_dir="/uberChick/Downloads/Mozilla/Nightly-Builds";
set prefix="/programs/Mozilla";

if ( "${?1}" == "0" || "${1}" == "" || "${1}" == "--help" ) then
	printf "Usage: %s (firefox|thunderbird)\n\tchecks out the latest source code for the mozilla project, builds it, makes its package(tarball), and back-ups the built tarball using the build day.\n" `basename "${0}"`;
	exit -1;
endif



init:
cd "${mozilla_dir}";

if ( "${?GREP_OPTIONS}" == "1" ) unsetenv GREP_OPTIONS;
unalias grep;
unalias egrep;

if ( ! -d "src" ) mkdir "src";
cd src;



configure:
switch ( "${1}" )
case "thunderbird":
	set build_mozilla="thunderbird";
	set mercurial_repo="comm-central";
	set enable_mozilla="--enable-application=mail --enable=calendar --enable-static";
	set prefix="${prefix}/Thunderbird3";
	breaksw
case "xulrunner":
	set build_mozilla="xulrunner";
	set mercurial_repo="mozilla-central";
	set enable_mozilla="--enable-application=xulrunner --enable-libxul";
	set prefix="${prefix}/XULRunner-1.9.1";
	breaksw
case "firefox":
default:
	set build_mozilla="firefox";
	set mercurial_repo="mozilla-central";
	set enable_mozilla="--enable-application=browser --enable-libxul";
	set prefix="${prefix}/Firefox3";
	breaksw
endsw
set topdir="${mozilla_dir}/src";
if ( ! -d "${topdir}" ) mkdir -p "${topdir}";
set srcdir="${topdir}/${build_mozilla}-src";
if ( ! -d "${srcdir}" ) mkdir "${srcdir}";
set objdir="${topdir}/${build_mozilla}-objdir";
if ( ! -d "${objdir}" ) mkdir "${objdir}";



checkout:
if ( ! -d "${srcdir}/.hg" ) hg clone "http://hg.mozilla.org/${mercurial_repo}/" "${srcdir}";
cd "${srcdir}";
hg pull -u;



mozconfig:
cd "${srcdir}";
#if ( ! ( -e "../${build_mozilla}.mozconfig" && -s "../${build_mozilla}.mozconfig" ) ) printf "ac_add_options ${enable_mozilla} --enable-installer --enable-system-sqlite --enable-optimize --enable-default-toolkit=cairo-gtk2 --disable-pedantic --disable-tests --disable-mochitest --disable-shared\nmk_add_options MOZ_OBJDIR=@TOPSRCDIR@/../${build_mozilla}-objdir\nmk_add_options AUTOCONF=autoconf-2.13\n" >! "../${build_mozilla}.mozconfig"
#cp -f "../${build_mozilla}.mozconfig" "./.mozconfig"
printf "ac_add_options ${enable_mozilla} --enable-installer --disable-system-sqlite --enable-optimize --enable-default-toolkit=cairo-gtk2 --disable-pedantic --disable-tests --disable-mochitest --disable-shared\nmk_add_options MOZ_OBJDIR=@TOPSRCDIR@/../${build_mozilla}-objdir\nmk_add_options AUTOCONF=autoconf-2.13\n" >! ".mozconfig"



make:
cd "${srcdir}";
if ( "${build_mozilla}" == "thunderbird" ) python client.py checkout;
make -f client.mk build;



make_tarball:
cd "${objdir}";
make package;



backup:
cd "${objdir}";
set today=`date '+%Y-%m-%d'`;
if ( "${build_mozilla}" == "thunderbird" ) cd mozilla;
foreach tarball ( dist/*.tar.bz2 )
	set todays_tarball="`basename ${tarball} | sed 's/\(.*\)\(\.tar\.bz2\)/\1\.${today}\2/g'`";
	cp ${tarball} "${tarball_backup_dir}/${todays_tarball}";
end



uninstall:
foreach program ( ( "${build_mozilla}-bin" "${build_mozilla}" ) )
	foreach pid ( `pidof -x "${program}"` )
		set still_running = ( "\n" );
		while ( "${#still_running}" < 10 )
			kill -QUIT "${pid}";
			sleep 2;
			foreach test ( `pidof -x "${program}"` )
				if ( "${pid}" == "${test}" ) set still_running = ( ${still_running} "\n" );
			end
		end
		kill -9 "${pid}"
	end
end
rm -rf "${prefix}/x86_64";



install:
cd "${objdir}";
if ( "${build_mozilla}" == "thunderbird" ) cd mozilla;
tar -C "${prefix}" -xjf dist/${build_mozilla}-*.tar.bz2;
mv "${prefix}/${build_mozilla}" "${prefix}/x86_64";

post_install:
cd "${prefix}";
if ( "${build_mozilla}" == "firefox" ) then
	cd "x86_64";
	rm -r searchplugins plugins;
	ln -s ../searchplugins .;
	ln -s ../plugins .;
	cd ..;
endif


run:
${prefix}/x86_64/${build_mozilla} >& /dev/null &

