#!/bin/tcsh -f
if(! ${?TCSH_RC_SESSION_PATH} ) setenv TCSH_RC_SESSION_PATH "/projects/cli/console.pallet/tcshrc";
set source_file="build.canvas";
source "${TCSH_RC_SESSION_PATH}/argv:check" "${source_file}" ${argv};
if( $args_handled > 0 ) then
	@ args_shifted=0;
	while( $args_shifted < $args_handled )
		@ args_shifted++;
		shift;
	end
	unset args_shifted;
endif
unset args_handled;

source "${TCSH_RC_SESSION_PATH}/../devel/make/compilers.environment";

if( ${?OSS_CANVAS} ) unsetenv OSS_CANVAS;

if(! ${?SSH_CONNECTION} ) printf "Setting up program build environment @ %s.\n" `date "+%I:%M:%S%P"`;

if( ${?GREP_OPTIONS} ) unsetenv GREP_OPTIONS;
if( `alias grep` != "" ) unalias grep;

alias	"configure"	"/projects/cli/devel/make/my:configure";
alias	"autogen.sh"	"/projects/cli/devel/make/my:autogen.sh";

#
#C compiler linking flags
#	libraries to pass to the linker.
#		-l<library>, e.g. -lpango-1.0
#	or shared objects directly:
#		-L<library.path.so>, e.g. -L/usr/lib64/libpango-1.0.so
#setenv	LDFLAGS		""
#setenv	LIBS		""

setenv	LD_LIBRARY_PATH		"/usr/include";
setenv	LD_RUN_PATH		"/usr/include";


#C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
#you have headers in a nonstandard directory <include dir>
setenv MY_INCLUDE_FLAGS "-I${LD_LIBRARY_PATH} -I. -I..";

setenv CPPFLAGS "${MY_INCLUDE_FLAGS}";

setenv MAKEFLAGS "-Wall -Wextra -Wformat=2";

setenv CFLAGS "-std=gnu99 ${MY_INCLUDE_FLAGS}";

setenv CXXFLAGS "-std=gnu++0x ${MY_INCLUDE_FLAGS}";

#source "${TCSH_RC_SESSION_PATH}/paths.cshrc.tcsh" --force

set source_file="build.canvas";
source "${TCSH_RC_SESSION_PATH}/argv:clean-up" "${source_file}";
