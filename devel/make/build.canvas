#!/bin/tcsh -f

if( ${?OSS_CANVAS} ) unsetenv OSS_CANVAS;
source /projects/cli/tcshrc/argv:check build.canvas ${argv};
if(! ${?SSH_CONNECTION} ) printf "Setting up program build environment @ %s.\n" `date "+%I:%M:%S%P"`;

if( ${?GREP_OPTIONS} ) unsetenv GREP_OPTIONS;
if( `alias grep` != "" ) unalias grep;

alias	"configure"	"/projects/cli/devel/make/my:configure";
alias	"autogen.sh"	"/projects/cli/devel/make/my:autogen.sh";

#
#C compiler linking flags
#	libraries to pass to the linker.
#		-l<library>, e.g. -lpango-1.0
#	or shared objects directly:
#		-L<library.path.so>, e.g. -L/usr/lib64/libpango-1.0.so
#setenv	LDFLAGS		""
#setenv	LIBS		""

setenv	LD_LIBRARY_PATH		"/usr/include";
setenv	LD_RUN_PATH		"/usr/include";


#C/C++ preprocessor
setenv CPP "/usr/bin/cpp";

#C compiler
setenv CC "/usr/bin/gcc";

#C++ compiler
setenv CXX "/usr/bin/g++";

#C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
#you have headers in a nonstandard directory <include dir>
setenv MY_INCLUDE_FLAGS "-I${LD_LIBRARY_PATH} -I. -I..";

setenv CPPFLAGS "${MY_INCLUDE_FLAGS}";

setenv MAKEFLAGS "-Wall -Wextra -Wformat=2";

setenv CFLAGS "-std=gnu99 -O3 ${MY_INCLUDE_FLAGS}";

setenv CXXFLAGS "-std=gnu++0x -O3 ${MY_INCLUDE_FLAGS}";

source $TCSH_RC_SESSION_PATH/paths.tcsh --force

source /projects/cli/tcshrc/argv:clean-up build.canvas;

