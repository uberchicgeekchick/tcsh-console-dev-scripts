#!/bin/tcsh -f
if(! ${?0} ) then
	printf "This script cannot be sourced.\n";
	goto exit_script;
endif
	
	onintr exit_script;

	if( "${1}" != "" ) then
		set symlink_log="${1}";
	else
		set symlink_log=`/bin/ls --width=1 -tr ./.symlink* | tail -1`;
	endif
	
	if(!( "${symlink_log}" != "" && -e "${symlink_log}" )) \
		goto usage;
	
restore_symlinks:
	if(! ${?symlink_log} ) \
		goto usage;
	if(! -e "${symlink_log}" ) \
		goto usage;
	
	onintr -;
	
	printf "Restoring symlinks.\n";
	
	foreach project_symlink("`cat '${symlink_log}'`")
		set symlink="`printf '%s' "\""${project_symlink}"\"" | sed -r 's/(.*)\t\=\t(.*)\/?"\$"/\1/'`";
		set target="`printf '%s' "\""${project_symlink}"\"" | sed -r 's/(.*)\t\=\t(.*)\/?"\$"/\2/'`";
		
		if(!( "${target}" != "" && "${target}" != "${project_symlink}" && "${symlink}" != "" && "${symlink}" != "${project_symlink}" )) then
			printf "**error** Cannot follow the symlink for %s\n" "${project_symlink}";
			unset target symlink;
			continue;
		endif
		
		cd `dirname "${symlink}"`;
		rm -rf ./`basename "${symlink}"`;
		if(! -e ./`basename "${symlink}"` ) \
			ln -sf "${target}" ./`basename "${symlink}"`;
		
		cd "${owd}";
		
		unset target symlink;
	end
	
	rm -f "${symlink_log}" > /dev/null;
	unset project_symlink follow_symlinks symlink_log;
	
	onintr exit_script;
#restore_symlinks:

exit_script:
	exit;
#exit_script:


usage:
	printf "Usage: %s ./.symlink."\`"date '+%s'"\`".lst\n" "`basename "\""${0}"\""`";
	goto exit_script;
#goto usage;
