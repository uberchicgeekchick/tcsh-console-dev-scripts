#!/bin/tcsh -f
set program_basename=`basename "${0}"`;
set firefox_profile_path="/programs/mozilla/settings/${program_basename}/profiles";
set argz="";

while( ${?1} && "${1}" != "" )
	switch( "${1}" )
	case "--launch-in-terminal":
	case "--use-launcher":
	case "--launcher":
		set use_launcher;
		breaksw;
	case "--3.5":
		set program_path="/usr/bin";
		breaksw;
	case "--nightly-build":
	case "--x86-64":
		set program_path="/programs/mozilla/firefox/x86_64";
		breaksw;
	case "--download":
		set program_path="/programs/mozilla/firefox/firefox";
		breaksw;
	case "-ProfileManager":
		set argz="${1} ${argz}";
		set ff_profile;
		breaksw;
	case "-P":
		shift;
		if(!( ${?1} && "${1}" != "" && -d "${firefox_profile_path}/${1}" )) then
			printf "%s is an invalid profile: Valid profiles are: %s.\n" "${1}" "`ls --width=1 "\""${firefox_profile_path}/"\"";`" > /dev/stderr;
			goto exit_script;
		endif
		set ff_profile="${1}";
		breaksw;
	default:
		set argz="${argz} ${1}";
		breaksw;
	endsw
	shift;
end

if(! ${?ff_profile} ) then
	set ff_profile="uberChick";
endif

if(!(${?program_path})) then
	if( -d "/programs/mozilla/firefox/x86_64" ) then
		set program_path="/programs/mozilla/firefox/x86_64";
	else if( -d "/programs/mozilla/firefox/firefox" )
		set program_path="/programs/mozilla/firefox/firefox";
	else
		set program_path="/usr/bin";
	endif
endif
set program="${program_path}/${program_basename}";
if(! -x "${program}" ) \
	goto noexec;


ff_init:
	printf "Launching:\n\t%s\n\n" "${program}";
	set ff_binaries=("${program}-bin" "${program}" "${program}.sh");
	goto ff_binaries_renice;
#goto ff_init;


noexec:
	printf "Unable to find %s.\n" "${program}" > /dev/stderr;
	set status=-1;
	goto exit_script;

launchers_main:
	set rm_extensions;
	printf "Attempting load %s; attempt: %d.\n" ${program_basename} ${ff_attempt};
	if(! ${?ff_found} ) then
		@ ff_attempt++;
		if( ${ff_attempt} > 1 ) then
			if( ${?rm_extensions} ) then
				rm -f "${firefox_profile_path}/${ff_profile}/lock" >& /dev/null;
				
				if( -e "${firefox_profile_path}/${ff_profile}/extensions.cache" ) then
					printf "Removing extensions cache files @\n\t<%s/%s/extensions.cache>\n" "${firefox_profile_path}" "${ff_profile}";
					rm -f "${firefox_profile_path}/${ff_profile}/extensions.cache";
				endif
				if( -e "${firefox_profile_path}/${ff_profile}/extensions.rdf" ) then
					printf "Removing extensions cache files @\n\t<%s/%s/extensions.rdf>\n" "${firefox_profile_path}" "${ff_profile}";
					rm -f "${firefox_profile_path}/${ff_profile}/extensions.rdf";
				endif
				if( -e "${firefox_profile_path}/${ff_profile}/extensions.ini" ) then
					printf "Removing extensions cache files @\n\t<%s/%s/extensions.ini>\n" "${firefox_profile_path}" "${ff_profile}";
					rm -f "${firefox_profile_path}/${ff_profile}/extensions.ini";
				endif
				unset rm_extensions;
			endif
			sleep ${ff_attempt_sleep};
		endif
	else if( ${ff_attempt} == 0 ) then
		if( ${?use_launcher} ) \
			unset use_launcher;
		@ ff_attempt=${ff_attempt_max}+1;
	endif
	goto ff_start;
#launchers_main


check_ff_4:
	set program_basename="plugin-container";
	set program="${program_path}/${program_basename}";
	if(! -x "${program}" ) \
		goto exit_script;
	
	unset ff_found;
	printf "Renicing:\n\t%s\n\n" "${program_basename}";
	
	set ff_binaries=("${program}");
	set callback="exit_script";
	goto ff_binaries_renice;
#goto check_ff_4:
	

ff_binaries_renice:
	@ ff_attempt_max=10;
	@ ff_attempt_sleep=10;
	@ ff_attempt=0;
	@ ff_renice_priority=10;
	
	foreach ff_binary( ${ff_binaries} )
		@ ff_attempt++;
		if( $ff_attempt > $ff_attempt_max ) \
			break;
		
		if(! ${?ff_found} ) then
			printf "Looking for running instance of: %s.\n" ${ff_binary};
			foreach ff_pid(`/bin/pidof ${ff_binary}`)
				printf "Found running instance of: %s; pid: %s\n" ${ff_binary} ${ff_pid};
				if( "${ff_pid}" != "" && $ff_pid > 0 ) then
					renice +$ff_renice_priority $ff_pid >& /dev/null;
					printf "Found running instance of: %s; pid: %s\n" ${ff_binary} ${ff_pid};
					if(! ${?ff_found} ) \
						set ff_found;
				endif
			end
		endif
		
		if( ${?ff_found} ) \
			break;
		
		sleep $ff_attempt_sleep;
	end
	
	if( ${?ff_found} && ${#ff_binaries} == 1 ) then
		set callback="exit_script";
	else if(! ${?ff_found} ) then
		set callback="launchers_main";
	else
		set callback="ff_start";
	endif
	
	goto $callback;
#goto ff_binaries_renice;

exit_script:
	if( "${program_basename}" != "plugin-container" ) then
		goto check_ff_4;
	endif
	if( ${?rm_extensions} ) \
		unset rm_extensions;
	if( ${?use_launcher} ) \
		unset use_launcher;
	if( ${?program} ) \
		unset program;
	unset program_basename program_path firefox_profile_path ff_binaries ff_binary argz ff_pid ff_attempt;
	if(! ${?ff_found} ) then
		set status=-1;
	else
		unset ff_found;
		set status=0;
	endif
	exit ${status};

ff_start:
	echo "Launching:\n\t";
	if( ${?use_launcher} ) then
		if( "${argz}" != "" ) then
			echo /usr/bin/gnome-terminal --role="launcher:${ff_binary}" --geometry=80x10 --hide-menubar --tab-with-profile='launcher' --command="${program} -P ${ff_profile} ${argz}" \&;
			/usr/bin/gnome-terminal --role="launcher:${ff_binary}" --geometry=80x10 --hide-menubar --tab-with-profile='launcher' --command="${program} -P ${ff_profile} ${argz}" &;
		else
			echo /usr/bin/gnome-terminal --role="launcher:${ff_binary}" --geometry=80x10 --hide-menubar --tab-with-profile='launcher' --command="${program} -P ${ff_profile}" \&;
			/usr/bin/gnome-terminal --role="launcher:${ff_binary}" --geometry=80x10 --hide-menubar --tab-with-profile='launcher' --command="${program} -P ${ff_profile}" &;
		endif
	else
		if( "${argz}" != "" ) then
			echo ${program} -P ${ff_profile} "${argz}" \&;
			${program} -P ${ff_profile} "${argz}" &;
		else
			echo ${program} -P ${ff_profile} \&;
			${program} -P ${ff_profile} &;
		endif
	endif
	if( ${ff_attempt} > ${ff_attempt_max} ) then
		printf "Finished attempting load %s after %d attempts.\n" "${program}" ${ff_attempt};
		goto exit_script;
	endif
	
	sleep ${ff_attempt_sleep};
	
	goto launchers_main;
#ff_start;

