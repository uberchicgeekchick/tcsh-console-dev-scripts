#!/bin/tcsh -f
if(! ${?TCSH_LAUNCHER_PATH} ) \
	setenv TCSH_LAUNCHER_PATH \$"{TCSH_RC_SESSION_PATH}/../launchers";

set this_program="reniceall";
set dependencies=( "renice" );

foreach dependency(${dependencies})
	foreach dependency( "`where '${dependency}'`" )
		if(! -x "${dependency}" ) then
			unset dependency;
			continue;
		endif
		
		switch("${dependency}")
			case "${0}":
			case "./${dependency}":
			case "${TCSH_LAUNCHER_PATH}/${dependency}":
				unset dependency;
				breaksw;
		endsw
	end
	if(! ${?dependency} ) \
		goto missing_dependency;
end

if(! ${?0} ) then
	alias "${this_program}"	\$"{TCSH_LAUNCHER_PATH}/${this_program}.init";
	complete "${this_program}" 'p/1/(-19 -18 -17 -16 -15 -14 -13 -12 -11 -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 +1 +2 +3 +4 +5 +6 +7 +8 +9 +10 +11 +12 +13 +14 +15 +16 +17 +18 +19 +20)/' 'p/2-/c/'
	set status=-1;
	unset this_program dependency dependencies;
	goto main_quit;
endif

main:
	set status=0;
	
	set program="${dependency}";
	goto parse_argv; #exits via calling main_quit || reniceall.
#main

reniceall:
	if(!( ${?priority} && ${?programs_to_renice} )) \
		goto usage;
	
	set status=0;
	if( $uid != 0 && `printf "${priority}" | sed -r 's/^(.).*$/\1/'` == "-" ) \
		set program="sudo ${program}";
	foreach program_to_renice(${programs_to_renice})
		if( "${program_to_renice}" == "" ) \
			continue;
		
		if( ${?debug} ) then
			printf "Looking for all PIDs belonging to %s\n" "${program_to_renice}";
			echo "/bin/ps -A -c -F | /bin/grep --perl-regexp "\""^[0-9]+[\\t ]+([0-9]+).*[0-9]{2}:[0-9]{2}:[0-9]{2} [^ ]*$program_to_renice"\"" | sed -r 's/^[0-9]+[ ]+([0-9]+).*[\\r\\n]*/\\1/'";
		endif
		foreach pid( `/bin/ps -A -c -F | /bin/grep --perl-regexp "^[0-9]+[\t ]+([0-9]+).*[0-9]{2}:[0-9]{2}:[0-9]{2} [^ ]*$program_to_renice" | sed -r 's/^[0-9]+[ ]+([0-9]+).*[\r\n]*/\1/'` )
			if( "${pid}" == "" ) \
				continue;
			
			printf "Renicing %s(pid: %s) to %s.\n" "${program_to_renice}" "${pid}" "${priority}";
			if( ${?debug} ) \
				printf "%s %s %s\n" "${program}" "${priority}" "${pid}";
			echo ${program} ${priority} ${pid};
			${program} ${priority} ${pid};
		end
	end
	goto main_quit;
#reniceall

main_quit:
	unset dependencies;
	if( ${?dependency} ) \
		unset dependency;
	if( ${?program} ) \
		unset program;
	if( ${?this_program} ) \
		unset this_program;
	exit ${status};
#main_quit

usage:
	printf "%s priority program_to_renice..." "${this_program}";
	goto main_quit;
#usage:

missing_dependency:
	printf "Unable to find %s.\n" "${dependency}";
	set status=-1;
	goto main_quit;

parse_argv:
	while( "${1}" != "" )
		set option="`echo '${1}' | sed -r 's/[\-]{1,2}([^=]+)=?(.*)"\$"/\1/'`";
		set value="`echo '${1}' | sed -r 's/[\-]{1,2}([^=]+)=?(.*)"\$"/\2/'`";
		
		switch( "${option}" )
			case "help":
				goto usage;
				breaksw;
			
			case "debug":
				set debug;
				breaksw;
			
			default:
				if( `echo "${1}" | sed -r 's/^[\+\-]?[0-9]+$//'` == "" ) then
					set priority="${1}";
					echo "New priority will be: '${priority}'\n";
					breaksw;
				endif
				
				if(! ${?programs_to_renice} ) then
					set programs_to_renice=( "${1}" );
				else
					set programs_to_renice=( ${programs_to_renice} "${1}" );
				endif
				breaksw;
		endsw
		shift;
	end
	goto reniceall;
#parse_argv

