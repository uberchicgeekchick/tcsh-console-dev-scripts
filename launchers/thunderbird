#!/bin/tcsh -f
set this_program="`basename '${0}'`";
set firefox_profile_path="/programs/mozilla/settings/${this_program}/profiles";
set argz="";

while( ${?1} && "${1}" != "" )
	switch( "${1}" )
	case "--launch-in-terminal":
	case "--use-launcher":
	case "--launcher":
		set use_launcher;
		breaksw
	case "--3.5":
		set program_path="/usr/bin/";
		breaksw
	case "--nightly-build":
	case "--x86-64":
		set program_path="/programs/mozilla/thunderbird/x86_64/";
		breaksw
	case "--download":
		set program_path="/programs/mozilla/thunderbird/thunderbird/";
		breaksw
	case "-ProfileManager":
		set argz="${1} ${argz}";
		set ff_profile;
		breaksw
	case "-P":
		shift;
		if(!( ${?1} && "${1}" != "" && -d "${firefox_profile_path}/${1}" )) then
			printf "%s is an invalid profile: Valid profiles are: %s.\n" "${1}" "`ls --width=1 "\""${firefox_profile_path}/"\"";`" > /dev/stderr;
			goto exit_script;
		endif
		set ff_profile="${1}";
		breaksw;
	default:
		set argz="${argz} ${1}";
		breaksw
	endsw
	shift;
end

if(! ${?ff_profile} ) then
	set ff_profile="uberChicGeekChick";
endif

if(!(${?program_path})) then
	if( -d "/programs/mozilla/thunderbird/x86_64" ) then
		set program_path="/programs/mozilla/thunderbird/x86_64";
	else if( -d "/programs/mozilla/thunderbird/thunderbird" )
		set program_path="/programs/mozilla/thunderbird/thunderbird";
	else
		set program_path="/usr/bin";
	endif
endif

ff_init:
set program="${program_path}/${this_program}";
printf "Launching:\n\t%s\n\n" "${program}";

set ff_binaries=("${program}-bin" "${program}" "${program}.sh");

@ ff_attempt_max=10;
@ ff_attempt_sleep=10;
@ ff_attempt=0;
@ ff_renice_priority=2;

ff_next:
foreach ff_binary( ${ff_binaries} )
	if(! ${?ff_found} ) then
		printf "Looking for running instance of: %s.\n" ${ff_binary};
		foreach ff_pid(`/bin/pidof ${ff_binary}`)
			printf "Found running instance of: %s; pid: %s\n" ${ff_binary} ${ff_pid};
			if( "${ff_pid}" != "" && $ff_pid > 0 ) then
				renice +$ff_renice_priority $ff_pid >& /dev/null;
				printf "Found running instance of: %s; pid: %s\n" ${ff_binary} ${ff_pid};
				if(! ${?ff_found} ) \
					set ff_found;
			endif
		end
	endif
end

if(! ${?ff_found} ) then
	if(! ${?program} ) \
		goto noexec;
	if(! -x "${program}" ) \
		goto noexec;
	goto launchers_main;
else
	goto exit_script;
endif

noexec:
	printf "Unable to find %s.\n" "${program}" > /dev/stderr;
	set status=-1;
	goto exit_script;

launchers_main:
	set rm_extensions;
	printf "Attempting load %s; attempt: %d.\n" ${this_program} ${ff_attempt};
	if(! ${?ff_found} ) then
		@ ff_attempt++;
		if( ${ff_attempt} > 1 ) then
			if( ${?rm_extensions} ) then
				if( -e "${firefox_profile_path}/${ff_profile}/extensions.cache" ) then
					printf "Removing extensions cache files @\n\t<%s/%s/extensions.cache>\n" "${firefox_profile_path}" "${ff_profile}";
					rm "${firefox_profile_path}/${ff_profile}/extensions.cache";
				endif
				if( -e "${firefox_profile_path}/${ff_profile}/extensions.rdf" ) then
					printf "Removing extensions cache files @\n\t<%s/%s/extensions.rdf>\n" "${firefox_profile_path}" "${ff_profile}";
					rm "${firefox_profile_path}/${ff_profile}/extensions.rdf";
				endif
				if( -e "${firefox_profile_path}/${ff_profile}/extensions.ini" ) then
					printf "Removing extensions cache files @\n\t<%s/%s/extensions.ini>\n" "${firefox_profile_path}" "${ff_profile}";
					rm "${firefox_profile_path}/${ff_profile}/extensions.ini";
				endif
				unset rm_extensions;
			endif
			sleep ${ff_attempt_sleep};
		endif
		goto ff_start;
	else if( ${ff_attempt} == 0 ) then
		if( ${?use_launcher} ) \
			unset use_launcher;
		@ ff_attempt=${ff_attempt_max}+1;
		goto ff_start;
	endif
#launchers_main

exit_script:
	if( ${?rm_extensions} ) \
		unset rm_extensions;
	if( ${?use_launcher} ) \
		unset use_launcher;
	if( ${?program} ) \
		unset program;
	unset this_program program_path firefox_profile_path ff_binaries ff_binary argz ff_pid ff_attempt;
	if(! ${?ff_found} ) then
		set status=-1;
	else
		unset ff_found;
		set status=0;
	endif
	exit ${status};

ff_start:
	if( -e "${firefox_profile_path}/${ff_profile}/lock" ) then
		printf "Removing: <%s/%s/lock>\n" "${firefox_profile_path}" "${ff_profile}";
		rm -f "${firefox_profile_path}/${ff_profile}/lock";
	endif
	echo "Launching:\n\t";
	if( ${?use_launcher} ) then
		echo /usr/bin/gnome-terminal --role="launcher:${ff_binary}" --geometry=80x10 --hide-menubar --tab-with-profile='launcher' --command="${program} -P "${ff_profile}" ${argz}" \&;
		/usr/bin/gnome-terminal --role="launcher:${ff_binary}" --geometry=80x10 --hide-menubar --tab-with-profile='launcher' --command="${program} -P "${ff_profile}" ${argz}" &;
	else
		echo ${program} -P "${ff_profile}" "${argz}" \&;
		${program} -P "${ff_profile}" "${argz}" &;
	endif
	if( ${ff_attempt} > ${ff_attempt_max} ) then
		printf "Finished attempting load %s after %d attempts.\n" ${program} ${ff_attempt} > /dev/stderr;
		goto exit_script;
	endif
	
	sleep ${ff_attempt_sleep};
	
	goto ff_next;

