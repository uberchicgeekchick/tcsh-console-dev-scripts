<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Functions (Programming Perl)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Functions">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>
</div>
<style type="text/css">
  #fixunixgb { position: absolute; right: 0px; bottom: 0px; }
  div > div#fixunixgb { position: fixed; }
  pre.fixit { overflow:auto;border-left:1px dashed #000;border-right:1px dashed #000;padding-left:2px; }
</style><!--[if gte IE 5.5]><![if lt IE 7]>
<style type="text/css">
  div#fixunixgb {
  right: auto; bottom: auto;
  left: expression( ( 0 - fixunixgb.offsetWidth + ( document.documentElement.clientWidth ? document.documentElement.clientWidth : document.body.clientWidth ) + ( ignoreMe2 = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft ) ) + 'px' );
  top: expression( ( 0 - fixunixgb.offsetHeight + ( document.documentElement.clientHeight ? document.documentElement.clientHeight : document.body.clientHeight ) + ( ignoreMe = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop ) ) + 'px' );
}
</style>
<![endif]><![endif]-->
<div id="fixunixgb" align=right style="position:fixed; bottom: 5; right: 5; color:black; background-color: white; width: 170px; height: 120px; padding: 5px; z-index:3">
<script language="javascript">
<!--
var state = 'visible';

function gushowhide(layer_ref) {

if (state == 'visible') {
state = 'hidden';
}
else {
state = 'visible';
}
if (document.all) { //IS IE 4 or 5 (or 6 beta)
eval( "document.all." + layer_ref + ".style.visibility = state");
}
if (document.layers) { //IS NETSCAPE 4 or below
document.layers[layer_ref].visibility = state;
}
if (document.getElementById && !document.all) {
maxwell_smart = document.getElementById(layer_ref);
maxwell_smart.style.visibility = state;
}
}
//-->
</script>
<script type="text/javascript"><!--
google_ad_client = "pub-0321943928525350";
/* 160x90, bottomleft fixed */
google_ad_slot = "2032737097";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<font size=-1><a href="javascript://" onclick="gushowhide('fixunixgb');">close (x)</a></font>
</div>
</div>
<br>
<center>

<script type="text/javascript"><!--
google_ad_client = "pub-0321943928525350";
//728x90, создано 30.01.08 (main top)
google_ad_slot = "2783893649";
google_ad_width = 728;
google_ad_height = 90;
//--></script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

&nbsp; &nbsp; &nbsp; &nbsp;

<a href="http://www.internetmap.info/cgi-bin/go.cgi?site_id=49589" target=_blank><img src="http://www.internetmap.info/images/im_88x85.gif" border=0 alt="Internet Map"></a>
<br>

<b><a href="http://www.unix.org.ua/forum/">Do not forget register in our new UNIX and CISCO forum</a></b>

</center>
<p>


<html>
<head>
<title>Functions (Programming Perl)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Functions">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home">
<map name="banner-map"><AREA SHAPE="RECT" COORDS="0,0,466,71" HREF="index.htm" ALT="Programming Perl"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="jobjects/fsearch.htm" ALT="Search this book">
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch28_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part5.htm">Part 5: Reference Material</a></td><td align="right" valign="top" width="172"><a href="ch29_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h1 class="chapter">Chapter 29.  Functions</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
<p>
<a href="ch29_01.htm">Perl Functions by Category</a>
<br>
<a href="ch29_02.htm">Perl Functions in Alphabetical Order</a>
<br>
</p>
</div>

<p>
<a name="INDEX-4604"></a><a name="INDEX-4605"></a>
This chapter describes the built-in Perl functions in alphabetical
order<a href="#FOOTNOTE-1">[1]</a> for convenient reference.  Each function
description begins with a brief summary of the syntax for that
function.  Parameter names like <em class="replaceable">THIS</em>
represent placeholders for actual expressions, and the text following
the syntax summary will describe the semantics of supplying (or
omitting) the actual arguments.</p>
<blockquote class="footnote">

<a name="FOOTNOTE-1"></a>
<p>[1] Sometimes tightly related functions are grouped
together in the system manpages, so we respect that grouping here.  To
find the description of <tt class="literal">endpwent</tt>, for instance,
you'll have to look under <tt class="literal">getpwent</tt>.</p>

</blockquote>

<p>
<a name="INDEX-4606"></a>
You can think of functions as terms in an expression, along with
literals and variables.  Or you can think of them as prefix operators
that process the arguments after them.  We call them operators half the
time anyway.</p>

<p>
<a name="INDEX-4607"></a>
Some of these operators, er, functions take a <em class="replaceable">LIST</em> as an argument.
Elements of the <em class="replaceable">LIST</em> should be separated by commas (or by <tt class="literal">=&gt;</tt>,
which is just a funny kind of comma).  The elements of the <em class="replaceable">LIST</em> are
evaluated in a list context, so each element will return either a
scalar or a list value, depending on its sensitivity to list context.
Each returned value, whether scalar or list, will be interpolated as
part of the overall sequence of scalar values.  That is, all the lists
get flattened into one list.  From the viewpoint of the function
receiving the arguments, the overall argument <em class="replaceable">LIST</em> is always a
single-dimensional list value.  (To interpolate an array as a single
element, you must explicitly create and interpolate a reference to the
array instead.)</p>

<p>
<a name="INDEX-4608"></a><a name="INDEX-4609"></a><a name="INDEX-4610"></a><a name="INDEX-4611"></a>
Predefined Perl functions may be used either with or without
parentheses around their arguments; the syntax summaries in this
chapter omit the parentheses.  If you do use parentheses, the simple
but occasionally surprising rule is this: if it looks like a function,
then it <em class="emphasis">is</em> a function, so precedence doesn't
matter.  Otherwise, it's a list operator or unary operator, and
precedence does matter.  Be careful, because even if you put

whitespace between the keyword and its left parenthesis, that doesn't
keep it from being a function:
<blockquote>
<pre class="programlisting">print 1+2*4;       # Prints 9.
print(1+2) * 4;    # Prints 3!
print (1+2)*4;     # Also prints 3!
print +(1+2)*4;    # Prints 12.
print ((1+2)*4);   # Prints 12.</pre>
</blockquote>
<a name="INDEX-4612"></a>
If you run Perl with the <tt class="userinput"><b>-w</b></tt> switch, it will warn you about this.  For example, the second and third lines above produce
messages like this:
<blockquote>
<pre class="programlisting">print (...) interpreted as function at - line 2.
Useless use of integer multiplication in void context at - line 2.</pre>
</blockquote>

Given the simple definition of some functions, you have considerable
latitude in how you pass arguments.  For instance, the most
common way to use <tt class="literal">chmod</tt> is to pass the file permissions (the
mode) as an initial argument:
<blockquote>
<pre class="programlisting">chmod 0644, @array;</pre>
</blockquote>

but the definition of <tt class="literal">chmod</tt> just says:
<blockquote>
<pre class="programlisting">chmod <em class="replaceable">LIST</em>
</pre>
</blockquote>

so you could just as well say:
<blockquote>
<pre class="programlisting">unshift @array, 0644;
chmod @array;</pre>
</blockquote>

If the first argument of the list is not a valid mode, <tt class="literal">chmod</tt> will
fail, but that's a run-time semantic problem unrelated to the syntax of
the call.  If the semantics require any special arguments to be passed
first, the text will describe these restrictions.</p>

<p>In contrast to the simple <em class="replaceable">LIST</em> functions, other functions impose
additional syntactic constraints.  For instance, <tt class="literal">push</tt> has a syntax
summary that looks like this:
<blockquote>
<pre class="programlisting">push <em class="replaceable">ARRAY</em>, <em class="replaceable">LIST</em>
</pre>
</blockquote>

This means that <tt class="literal">push</tt> requires a proper array as its first argument,
but doesn't care about its subsequent arguments.  That's what the
<em class="replaceable">LIST</em> at the end means.  (<em class="replaceable">LIST</em>s always come at the end, since they
gobble up all remaining values.)  Whenever a syntax summary contains
any arguments before the <em class="replaceable">LIST</em>, those arguments are syntactically
distinguished by the compiler, not just semantically distinguished by
the interpreter when it runs later.  Such arguments are never evaluated
in list context.  They may be evaluated in scalar context, or they
may be special referential arguments such as the array in <tt class="literal">push</tt>.
(The description will tell you which is which.)</p>

<p>
<a name="INDEX-4613"></a><a name="INDEX-4614"></a><a name="INDEX-4615"></a>
For those operations that are based directly on the C library's
functions, we do not attempt to duplicate your system's documentation.
When a <tt class="literal">function</tt> description says to see
<em class="emphasis">function</em>(2), that means that you should
look up the corresponding C version of that function to learn more
about its semantics.  The number in parentheses indicates the section
of the system programmer's manual in which you will find the manpage,
if you have the manpages installed.  (And in which you won't, if you
don't.)</p>

<p>These manpages may document system-dependent behavior like
shadow password files, access control lists, and so forth.  Many
Perl functions that derive from C library functions in Unix are
emulated even on non-Unix platforms.  For example, although your
operating system might not support the <em class="emphasis">flock</em>(2) or <em class="emphasis">fork</em>(2)
syscalls, Perl will do its best to emulate them anyway by using
whatever native facilities your platform provides.</p>

<p>Occasionally, you'll find that the documented C function has more
arguments than the corresponding Perl function.  Generally, the missing
arguments are things that Perl knows already, such as the length of the
previous argument, so you needn't supply them in Perl.  Any remaining
disparities are caused by the different ways Perl and C specify
filehandles and success/failure values.</p>

<p>In general, functions in Perl that serve as wrappers for syscalls
of the same name (like <em class="emphasis">chown</em>(2), <em class="emphasis">fork</em>(2), <em class="emphasis">closedir</em>(2), etc.) all
return true when they succeed and <tt class="literal">undef</tt> otherwise, as mentioned
in the descriptions that follow.  This is different from the C library's
interfaces to these operations, which all return <tt class="literal">-1</tt> on failure.
Exceptions to this rule are <tt class="literal">wait</tt>, <tt class="literal">waitpid</tt>, and <tt class="literal">syscall</tt>.
Syscalls also set the special <tt class="literal">$!</tt> (<tt class="literal">$OS_ERROR</tt>) variable on failure.  Other
functions do not, except accidentally.</p>

<p>
<a name="INDEX-4616"></a><a name="INDEX-4617"></a><a name="INDEX-4618"></a>
For functions that can be used in either scalar or list context,
failure is generally indicated in scalar context by returning a
false value (usually <tt class="literal">undef</tt>) and in list context by returning
the null list.  Successful execution is generally indicated by
returning a value that will evaluate to true (in context).</p>

<p>Remember the following rule: there is <em class="emphasis">no</em> rule that relates the
behavior of a function in list context to its behavior in scalar
context, or vice versa.  It might do two totally different things.</p>

<p>Each function knows the context in which it was called.  The same
function that returns a list when called in list context will,
when called in scalar context, return whichever kind of value would be most appropriate.  Some functions return the
length of the list that would have been returned in list context.
Some operators return the first value in the list.  Some functions
return the last value in the list.  Some functions return the "other"
value, when something can be looked up either by number or by name.
Some functions return a count of successful operations.  In general,
Perl functions do exactly what you want, unless you want consistency.</p>

<p>
<a name="INDEX-4619"></a><a name="INDEX-4620"></a>
One final note: we've tried to be very consistent in our use of the
terms "byte" and "character".  Historically, these terms have been
confused with each other (and with themselves).  But when we say "byte"
we always mean an octet, 8 bits.  When we say "character", we mean an
abstract character, usually a Unicode character, which may be
represented by one or more bytes within your strings.</p>

<p>But notice that we said "usually".  Perl purposefully confuses bytes
with characters in the scope of a <tt class="literal">use bytes</tt> declaration, so whenever
we say "character", you should take it to mean a byte in a <tt class="literal">use bytes</tt>
context, and a Unicode character otherwise.  In other words, <tt class="literal">use bytes</tt> just warps the definition of character back to what it was in
older versions of Perl.  So, for instance, when we say that a scalar
<tt class="literal">reverse</tt> reverses a string character by character, don't ask us
whether that <em class="emphasis">really</em> means characters or bytes, because the answer is,
"Yes, it does."</p>


<h2 class="sect1">29.1. Perl Functions by Category</h2>

<p>
<a name="INDEX-4621"></a><a name="INDEX-4622"></a>
Here are Perl's functions and function-like keywords, arranged by
category.  Some functions appear under more than one heading.</p>

<dl>
<dt>
<b>Scalar manipulation</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><tt class="literal">chomp</tt>, <tt class="literal">chop</tt>, <tt class="literal">chr</tt>, <tt class="literal">crypt</tt>, <tt class="literal">hex</tt>,
<tt class="literal">index</tt>, <tt class="literal">lc</tt>, <tt class="literal">lcfirst</tt>, <tt class="literal">length</tt>, <tt class="literal">oct</tt>, <tt class="literal">ord</tt>, <tt class="literal">pack</tt>, <tt class="literal">q//</tt>, <tt class="literal">qq//</tt>, <tt class="literal">reverse</tt>, <tt class="literal">rindex</tt>,
<tt class="literal">sprintf</tt>, <tt class="literal">substr</tt>, <tt class="literal">tr///</tt>,
<tt class="literal">uc</tt>, <tt class="literal">ucfirst</tt>, <tt class="literal">y///</tt>
</p>
</dd>


<dt>
<b>Regular expressions and pattern matching</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><a name="INDEX-"></a><tt class="literal">m//</tt>, <tt class="literal">pos</tt>,
<tt class="literal">qr//</tt>, <tt class="literal">quotemeta</tt>, <tt class="literal">s///</tt>, <tt class="literal">split</tt>, <tt class="literal">study</tt>
</p>
</dd>


<dt>
<b>Numeric functions</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><tt class="literal">abs</tt>, <tt class="literal">atan2</tt>, <tt class="literal">cos</tt>, <tt class="literal">exp</tt>, <tt class="literal">hex</tt>, <tt class="literal">int</tt>, <tt class="literal">log</tt>, <tt class="literal">oct</tt>,
<tt class="literal">rand</tt>, <tt class="literal">sin</tt>, <tt class="literal">sqrt</tt>, <tt class="literal">srand</tt>
</p>
</dd>


<dt>
<b>Array processing</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><tt class="literal">pop</tt>, <tt class="literal">push</tt>, <tt class="literal">shift</tt>, <tt class="literal">splice</tt>, <tt class="literal">unshift</tt>
</p>
</dd>


<dt>
<b>List processing</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><tt class="literal">grep</tt>, <tt class="literal">join</tt>, <tt class="literal">map</tt>, <tt class="literal">qw//</tt>, <tt class="literal">reverse</tt>, <tt class="literal">sort</tt>, <tt class="literal">unpack</tt>
</p>
</dd>


<dt>
<b>Hash processing</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><tt class="literal">delete</tt>, <tt class="literal">each</tt>, <tt class="literal">exists</tt>, <tt class="literal">keys</tt>, <tt class="literal">values</tt>
</p>
</dd>


<dt>
<b>Input and output</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><a name="INDEX-"></a><tt class="literal">binmode</tt>, <tt class="literal">close</tt>, <tt class="literal">closedir</tt>, <tt class="literal">dbmclose</tt>, <tt class="literal">dbmopen</tt>, <tt class="literal">die</tt>,
<tt class="literal">eof</tt>, <tt class="literal">fileno</tt>, <tt class="literal">flock</tt>, <tt class="literal">format</tt>, <tt class="literal">getc</tt>, <tt class="literal">print</tt>, <tt class="literal">printf</tt>,
<tt class="literal">read</tt>, <tt class="literal">readdir</tt>, <tt class="literal">readpipe</tt>, <tt class="literal">rewinddir</tt>, <tt class="literal">seek</tt>, <tt class="literal">seekdir</tt>,
<tt class="literal">select</tt> (ready file descriptors), <tt class="literal">syscall</tt>, <tt class="literal">sysread</tt>, <tt class="literal">sysseek</tt>,
<tt class="literal">syswrite</tt>, <tt class="literal">tell</tt>, <tt class="literal">telldir</tt>, <tt class="literal">truncate</tt>, <tt class="literal">warn</tt>, <tt class="literal">write</tt>
</p>
</dd>


<dt>
<b>Fixed-length data and records</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><a name="INDEX-"></a><tt class="literal">pack</tt>, <tt class="literal">read</tt>, <tt class="literal">syscall</tt>, <tt class="literal">sysread</tt>, <tt class="literal">sysseek</tt>, <tt class="literal">syswrite</tt>,
<tt class="literal">unpack</tt>, <tt class="literal">vec</tt>
</p>
</dd>


<dt>
<b>Filehandles, files, and directories</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><a name="INDEX-"></a><a name="INDEX-"></a><tt class="literal">chdir</tt>, <tt class="literal">chmod</tt>, <tt class="literal">chown</tt>, <tt class="literal">chroot</tt>, <tt class="literal">fcntl</tt>, <tt class="literal">glob</tt>, <tt class="literal">ioctl</tt>,
<tt class="literal">link</tt>, <tt class="literal">lstat</tt>, <tt class="literal">mkdir</tt>, <tt class="literal">open</tt>, <tt class="literal">opendir</tt>, <tt class="literal">readlink</tt>,
<tt class="literal">rename</tt>, <tt class="literal">rmdir</tt>, <tt class="literal">select</tt> (ready file descriptors), <tt class="literal">select</tt>
(output filehandle), <tt class="literal">stat</tt>, <tt class="literal">symlink</tt>, <tt class="literal">sysopen</tt>, <tt class="literal">umask</tt>,
<tt class="literal">unlink</tt>, <tt class="literal">utime</tt>
</p>
</dd>


<dt>
<b>Flow of program control</b>
</dt>
<dd>
<a name="INDEX-"></a>
<p>
<tt class="literal">caller</tt>, <tt class="literal">continue</tt>, <tt class="literal">die</tt>, <tt class="literal">do</tt>, <tt class="literal">dump</tt>, <tt class="literal">eval</tt>, <tt class="literal">exit</tt>,
<tt class="literal">goto</tt>, <tt class="literal">last</tt>, <tt class="literal">next</tt>, <tt class="literal">redo</tt>, <tt class="literal">return</tt>, <tt class="literal">sub</tt>, <tt class="literal">wantarray</tt>
</p>
</dd>


<dt>
<b>Scoping</b>
</dt>
<dd>
<a name="INDEX-"></a>
<p>
<tt class="literal">caller</tt>, <tt class="literal">import</tt>, <tt class="literal">local</tt>, <tt class="literal">my</tt>, <tt class="literal">no</tt>, <tt class="literal">our</tt>, <tt class="literal">package</tt>, <tt class="literal">use</tt>
</p>
</dd>


<dt>
<b>Miscellaneous</b>
</dt>
<dd>
<p>
<tt class="literal">defined</tt>, <tt class="literal">dump</tt>, <tt class="literal">eval</tt>, <tt class="literal">formline</tt>, <tt class="literal">lock</tt>,
<tt class="literal">prototype</tt>, <tt class="literal">reset</tt>, <tt class="literal">scalar</tt>, <tt class="literal">undef</tt>, <tt class="literal">wantarray</tt><a name="INDEX-"></a>
</p>
</dd>


<dt>
<b>Processes and process groups</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><a name="INDEX-"></a><tt class="literal">alarm</tt>, <tt class="literal">exec</tt>, <tt class="literal">fork</tt>, <tt class="literal">getpgrp</tt>, <tt class="literal">getppid</tt>, <tt class="literal">getpriority</tt>,
<tt class="literal">kill</tt>, <tt class="literal">pipe</tt>, <tt class="literal">qx//</tt>,
<tt class="literal">setpgrp</tt>, <tt class="literal">setpriority</tt>, <tt class="literal">sleep</tt>, <tt class="literal">system</tt>, <tt class="literal">times</tt>, <tt class="literal">wait</tt>,
<tt class="literal">waitpid</tt>
</p>
</dd>


<dt>
<b>Library modules</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><tt class="literal">do</tt>, <tt class="literal">import</tt>, <tt class="literal">no</tt>, <tt class="literal">package</tt>, <tt class="literal">require</tt>, <tt class="literal">use</tt>
</p>
</dd>


<dt>
<b>Classes and objects</b>
</dt>
<dd>
<a name="INDEX-"></a><a name="INDEX-"></a>
<p>
<tt class="literal">bless</tt>, <tt class="literal">dbmclose</tt>, <tt class="literal">dbmopen</tt>, <tt class="literal">package</tt>, <tt class="literal">ref</tt>, <tt class="literal">tie</tt>, <tt class="literal">tied</tt>,
<tt class="literal">untie</tt>, <tt class="literal">use</tt>
</p>
</dd>


<dt>
<b>Low-level socket access</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><tt class="literal">accept</tt>, <tt class="literal">bind</tt>, <tt class="literal">connect</tt>, <tt class="literal">getpeername</tt>, <tt class="literal">getsockname</tt>,
<tt class="literal">getsockopt</tt>, <tt class="literal">listen</tt>, <tt class="literal">recv</tt>, <tt class="literal">send</tt>, <tt class="literal">setsockopt</tt>, <tt class="literal">shutdown</tt>,
<tt class="literal">socket</tt>, <tt class="literal">socketpair</tt>
</p>
</dd>


<dt>
<b>System V interprocess communication</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><tt class="literal">msgctl</tt>, <tt class="literal">msgget</tt>, <tt class="literal">msgrcv</tt>, <tt class="literal">msgsnd</tt>, <tt class="literal">semctl</tt>, <tt class="literal">semget</tt>,
<tt class="literal">semop</tt>, <tt class="literal">shmctl</tt>, <tt class="literal">shmget</tt>, <tt class="literal">shmread</tt>, <tt class="literal">shmwrite</tt>
</p>
</dd>


<dt>
<b>Fetching user and group information</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><a name="INDEX-"></a><a name="INDEX-"></a><tt class="literal">endgrent</tt>, <tt class="literal">endhostent</tt>, <tt class="literal">endnetent</tt>, <tt class="literal">endpwent</tt>, <tt class="literal">getgrent</tt>,
<tt class="literal">getgrgid</tt>, <tt class="literal">getgrnam</tt>, <tt class="literal">getlogin</tt>, <tt class="literal">getpwent</tt>, <tt class="literal">getpwnam</tt>,
<tt class="literal">getpwuid</tt>, <tt class="literal">setgrent</tt>, <tt class="literal">setpwent</tt>
</p>
</dd>


<dt>
<b>Fetching network information</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><tt class="literal">endprotoent</tt>, <tt class="literal">endservent</tt>, <tt class="literal">gethostbyaddr</tt>, <tt class="literal">gethostbyname</tt>,
<tt class="literal">gethostent</tt>, <tt class="literal">getnetbyaddr</tt>, <tt class="literal">getnetbyname</tt>, <tt class="literal">getnetent</tt>,
<tt class="literal">getprotobyname</tt>, <tt class="literal">getprotobynumber</tt>, <tt class="literal">getprotoent</tt>,
<tt class="literal">getservbyname</tt>, <tt class="literal">getservbyport</tt>, <tt class="literal">getservent</tt>, <tt class="literal">sethostent</tt>,
<tt class="literal">setnetent</tt>, <tt class="literal">setprotoent</tt>, <tt class="literal">setservent</tt>
</p>
</dd>


<dt>
<b>Time</b>
</dt>
<dd>
<p>
<a name="INDEX-"></a><tt class="literal">gmtime</tt>, <tt class="literal">localtime</tt>, <tt class="literal">time</tt>, <tt class="literal">times</tt>
</p>
</dd>

</dl>

<p>
</p>

<a name="INDEX-4623"></a><a name="INDEX-4624"></a>


















<a name="INDEX-5417"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch28_02.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch29_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">28.2. Special Variables in Alphabetical Order</td><td align="center" valign="top" width="171"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">29.2. Perl Functions in Alphabetical Order</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog3/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm">
</map>

<!-- END OF BODY -->

</body>
</html>


<br>


<table border=0 align=center>
<tr><td>


<script type="text/javascript"><!--
google_ad_client = "pub-0321943928525350";
/* 468x60, main footer */
google_ad_slot = "1100896219";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

<script>
user = "2823";
page = "2";

</script>



</td>
<td>

<!-- Ukrainian Banner Network 468x60 START -->
<center>
<script>
//<!--
user = "2823";
page = "2";
pid = Math.round((Math.random() * (10000000 - 1)));
document.write("<iframe src='http://banner.kiev.ua/cgi-bin/bi.cgi?h" +
user + "&amp;"+ pid + "&amp;" + page + "' frameborder=0 vspace=0 hspace=0 " +
" width=468 height=60 marginwidth=0 marginheight=0 scrolling=no>");
document.write("<a href='http://banner.kiev.ua/cgi-bin/bg.cgi?" +
user + "&amp;"+ pid + "&amp;" + page + "' target=_top>");
document.write("<img border=0 src='http://banner.kiev.ua/" +
"cgi-bin/bi.cgi?i" + user + "&amp;" + pid + "&amp;" + page +
"' width=468 height=60 alt='хЛТБЙОУЛБС вБООЕТОБС уЕФШ'></a>");
document.write("</iframe>");
//-->
</script>
</center>
<!-- Ukrainian Banner Network 468x60 END -->


</td></tr>
<tr><td colspan=2>
<br>
<hr size=1>



<!-- SpyLOG -->
<script src="http://tools.spylog.ru/counter_cv.js" id="spylog_code" type="text/javascript" counter="1028713" part="docs" track_links="ext" page_level="0">
</script>
<noscript>
<a href="http://u10287.13.spylog.com/cnt?cid=1028713&f=3&p=0" target="_blank">
<img src="http://u10287.13.spylog.com/cnt?cid=1028713&p=0" alt="SpyLOG" border="0" width="88" height="31"></a>
</noscript>
<!--/ SpyLOG -->

<!--bigmir)net TOP 100-->
<script type="text/javascript" language="javascript"><!--
function BM_Draw(oBM_STAT){
document.write('<table cellpadding="0" cellspacing="0" border="0" style="display:inline;margin-right:4px;"><tr><td><div style="margin:0px;padding:0px;font-size:1px;width:88px;"><div style="background:url(\'http://i.bigmir.net/cnt/samples/diagonal/b59_top.gif\') no-repeat bottom;">&nbsp;</div><div style="font:10px Tahoma;background:url(\'http://i.bigmir.net/cnt/samples/diagonal/b59_center.gif\');"><div style="text-align:center;"><a href="http://www.bigmir.net/" target="_blank" style="color:#0000ab;text-decoration:none;font:10px Tahoma;">bigmir<span style="color:#ff0000;">)</span>net</a></div><div style="margin-top:3px;padding: 0px 6px 0px 6px;color:#003596;"><div style="float:left;font:10px Tahoma;">'+oBM_STAT.hosts+'</div><div style="float:right;font:10px Tahoma;">'+oBM_STAT.hits+'</div></div><br clear="all"/></div><div style="background:url(\'http://i.bigmir.net/cnt/samples/diagonal/b59_bottom.gif\') no-repeat top;">&nbsp;</div></div></td></tr></table>');
}
//-->
</script>

<script type="text/javascript" language="javascript"><!--
bmN=navigator,bmD=document,bmD.cookie='b=b',i=0,bs=[],bm={o:1,v:126595,s:126595,t:0,c:bmD.cookie?1:0,n:Math.round((Math.random()* 1000000)),w:0};
for(var f=self;f!=f.parent;f=f.parent)bm.w++;
try{if(bmN.plugins&&bmN.mimeTypes.length&&(x=bmN.plugins['Shockwave Flash']))bm.m=parseInt(x.description.replace(/([a-zA-Z]|s)+/,''));
else for(var f=3;f<20;f++)if(eval('new ActiveXObject("ShockwaveFlash.ShockwaveFlash.'+f+'")'))bm.m=f}catch(e){;}
try{bm.y=bmN.javaEnabled()?1:0}catch(e){;}
try{bmS=screen;bm.v^=bm.d=bmS.colorDepth||bmS.pixelDepth;bm.v^=bm.r=bmS.width}catch(e){;}
r=bmD.referrer.slice(7);if(r&&r.split('/')[0]!=window.location.host){bm.f=escape(r);bm.v^=r.length}
bm.v^=window.location.href.length;for(var x in bm) if(/^[ovstcnwmydrf]$/.test(x)) bs[i++]=x+bm[x];
bmD.write('<sc'+'ript type="text/javascript" language="javascript" src="http://c.bigmir.net/?'+bs.join('&')+'"></sc'+'ript>');
//-->
</script>
<noscript>
<a href="http://www.bigmir.net/" target="_blank"><img src="http://c.bigmir.net/?v126595&s126595&t2" width="88" height="31" alt="bigmir)net TOP 100" title="bigmir)net TOP 100" border="0" /></a>
</noscript>
<!--bigmir)net TOP 100-->

<!--begin of Rambler's Top100 code -->
<a href="http://top100.rambler.ru/top100/">
<img src="http://counter.rambler.ru/top100.cnt?692798" alt="" width=1 height=1 border=0></a>
<!--end of Top100 code-->

<!--begin of Top100 logo-->
<a href="http://top100.rambler.ru/top100/">
<img src="http://top100-images.rambler.ru/top100/w1.gif" alt="Rambler's Top100" width=88 height=31 
border=0></a>
<!--end of Top100 logo -->


<!-- hit.ua -->
<a href='http://hit.ua/?x=3601' target='_blank'>
<script language="javascript" type="text/javascript"><!--
Cd=document;Cr="&"+Math.random();Cp="&s=1";
Cd.cookie="b=b";if(Cd.cookie)Cp+="&c=1";
Cp+="&t="+(new Date()).getTimezoneOffset();
if(self!=top)Cp+="&f=1";
//--></script>
<script language="javascript1.1" type="text/javascript"><!--
if(navigator.javaEnabled())Cp+="&j=1";
//--></script>
<script language="javascript1.2" type="text/javascript"><!--
if(typeof(screen)!='undefined')Cp+="&w="+screen.width+"&h="+
screen.height+"&d="+(screen.colorDepth?screen.colorDepth:screen.pixelDepth);
//--></script>
<script language="javascript" type="text/javascript"><!--
Cd.write("<img src='http://c.hit.ua/hit?i=3601&g=0&x=1"+Cp+Cr+
"&r="+escape(Cd.referrer)+"&u="+escape(window.location.href)+
"' border='0' width='88' height='31' "+
"alt='hit.ua: сейчас на сайте, посетителей и просмотров за сегодня' title='hit.ua: сейчас на сайте, посетителей и просмотров за сегодня'/>");
//--></script>
<noscript>
<img src='http://c.hit.ua/hit?i=3601&amp;g=0&amp;x=1' border='0' width='88' height='31' alt='hit.ua: сейчас на сайте, посетителей и просмотров за сегодня' title='hit.ua: сейчас на сайте, посетителей и просмотров за сегодня'/>
</noscript></a>
<!-- / hit.ua -->

<script language="javascript">//<!--
mtI="012408140822";mtG="45";mtT="4";mtS='http://012408140822.c.mystat-in.net/?';
mtD=document;mtN=navigator.appName;mtR=escape(mtD.referrer);
mtW="";mtC="";mtV="0";mtJ="1";
//--></script><script language="javascript1.1">//<!--
mtV="1";mtJ = (navigator.javaEnabled()?"1":"0");
//--></script><script language="javascript1.2">//<!--
mtE=screen;mtW=mtE.width;mtN!="Netscape"?mtC=mtE.colorDepth:mtC=mtE.pixelDepth;mtV="2";
//--></script><script language="javascript1.3">//<!--
mtV="3";
//--></script><script language="javascript">//<!--
mtUrl="";mtUrl+="\""+mtS+"i"+mtI+"&t"+mtT+"&g"+mtG+"&w"+mtW+"&c"+mtC+"&r"+mtR+"&v"+mtV+"&j"+mtJ+"\"";
mtUrl="<a href=http://mytop-in.net/ target=_blank><img src="+mtUrl+"width=88 height=31 border=0 alt=\"Rated by MyTOP\"></a>";
mtD.write(mtUrl);
//--></script>
<noscript>
<a href=http://mytop-in.net/ target=_blank><img src=http://012408140822.c.mystat-in.net/?i012408140822&t4&g45&j0 width=88 height=31 border=0 alt="Rated by MyTOP"></a>
</noscript>

<!--Rating@Mail.ru COUNTEr--><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<a href="http://top.mail.ru/jump?from=1374183"'+
' target=_top><img src="http://d7.cf.b4.a1.top.list.ru/counter'+
'?id=1374183;t=48;js='+js+a+';rand='+Math.random()+
'" alt="Рейтинг@Mail.ru"'+' border=0 height=31 width=88/><\/a>')
if(11<js)d.write('<'+'!-- ')//--></script><noscript><a
target=_top href="http://top.mail.ru/jump?from=1374183"><img
src="http://d7.cf.b4.a1.top.list.ru/counter?js=na;id=1374183;t=48"
border=0 height=31 width=88
alt="Рейтинг@Mail.ru"/></a></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--></script><!--/COUNTER-->

<!-- I.UA counter --><a href="http://www.i.ua/" target="_blank" onclick="this.href='http://i.ua/r.php?21595';" title="Rated by I.UA">
<script type="text/javascript" language="javascript"><!--
iS='<img src="http://r.i.ua/s?u21595&p66&n'+Math.random();
iD=document;iD.cookie="iua=1";if(iD.cookie)iS+='&c1';
iS+='&d'+(screen.colorDepth?screen.colorDepth:screen.pixelDepth)
+"&w"+screen.width+'&h'+screen.height
iT=iD.referrer.slice(7);iH=window.location.href.slice(7);
((iI=iT.indexOf('/'))!=-1)?(iT=iT.substring(0,iI)):(iI=iT.length);
if(iT!=iH.substring(0,iI))iS+='&f'+escape(iD.referrer.slice(7))
iS+='&r'+escape(iH);
iD.write(iS+'" border="0" width="88" height="31" />');
//--></script></a><!-- End of I.UA counter -->

<script type="text/javascript">
<!--
Nnv=navigator;Nna=Nnv.appName;Nd=document;Nd.cookie="b=b";Nc=0;if(Nd.cookie)Nc=1;
Nn=(Nna.substring(0,2)=="Mi")?0:1;Ns=screen;Npx=(Nn==0)?Ns.colorDepth:Ns.pixelDepth;
str='<img src="http://c.uarating.com/199;'+Ns.width+'x'+Ns.height+';'+Npx+';'+Nc+';';
str=str+escape(Nd.referrer)+';'+Math.random()+'" width="88" height="31" border="0">';
document.write('<a href="http://www.uarating.com/" alt="uaRating" target="_blank">'+str+'<\/a>');
// -->
</script>
<noscript><a href="http://www.uarating.com/" target="_blank"><img src="http://c.uarating.com/199;0x0;0;0;-;0" alt="uaRating" width="88" height="31" border="0"></a></noscript>


</td></tr>
</table>


</body>
</html>