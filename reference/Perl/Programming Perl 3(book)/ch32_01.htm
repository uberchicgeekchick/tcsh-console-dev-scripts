<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>Standard Modules (Programming Perl)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Standard Modules">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>
</div>
<style type="text/css">
  #fixunixgb { position: absolute; right: 0px; bottom: 0px; }
  div > div#fixunixgb { position: fixed; }
  pre.fixit { overflow:auto;border-left:1px dashed #000;border-right:1px dashed #000;padding-left:2px; }
</style><!--[if gte IE 5.5]><![if lt IE 7]>
<style type="text/css">
  div#fixunixgb {
  right: auto; bottom: auto;
  left: expression( ( 0 - fixunixgb.offsetWidth + ( document.documentElement.clientWidth ? document.documentElement.clientWidth : document.body.clientWidth ) + ( ignoreMe2 = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft ) ) + 'px' );
  top: expression( ( 0 - fixunixgb.offsetHeight + ( document.documentElement.clientHeight ? document.documentElement.clientHeight : document.body.clientHeight ) + ( ignoreMe = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop ) ) + 'px' );
}
</style>
<![endif]><![endif]-->
<div id="fixunixgb" align=right style="position:fixed; bottom: 5; right: 5; color:black; background-color: white; width: 170px; height: 120px; padding: 5px; z-index:3">
<script language="javascript">
<!--
var state = 'visible';

function gushowhide(layer_ref) {

if (state == 'visible') {
state = 'hidden';
}
else {
state = 'visible';
}
if (document.all) { //IS IE 4 or 5 (or 6 beta)
eval( "document.all." + layer_ref + ".style.visibility = state");
}
if (document.layers) { //IS NETSCAPE 4 or below
document.layers[layer_ref].visibility = state;
}
if (document.getElementById && !document.all) {
maxwell_smart = document.getElementById(layer_ref);
maxwell_smart.style.visibility = state;
}
}
//-->
</script>
<script type="text/javascript"><!--
google_ad_client = "pub-0321943928525350";
/* 160x90, bottomleft fixed */
google_ad_slot = "2032737097";
google_ad_width = 160;
google_ad_height = 90;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<font size=-1><a href="javascript://" onclick="gushowhide('fixunixgb');">close (x)</a></font>
</div>
</div>
<br>
<center>

<script type="text/javascript"><!--
google_ad_client = "pub-0321943928525350";
//728x90, создано 30.01.08 (main top)
google_ad_slot = "2783893649";
google_ad_width = 728;
google_ad_height = 90;
//--></script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

&nbsp; &nbsp; &nbsp; &nbsp;

<a href="http://www.internetmap.info/cgi-bin/go.cgi?site_id=49589" target=_blank><img src="http://www.internetmap.info/images/im_88x85.gif" border=0 alt="Internet Map"></a>
<br>

<b><a href="http://www.unix.org.ua/forum/">Do not forget register in our new UNIX and CISCO forum</a></b>

</center>
<p>


<html>
<head>
<title>Standard Modules (Programming Perl)</title>

<!-- STYLESHEET -->

<link rel="stylesheet" type="text/css" href="../style/style1.css">

<!-- METADATA -->



<!--Dublin Core Metadata-->

<meta name="DC.Creator" content="">
<meta name="DC.Date" content="">
<meta name="DC.Format" content="text/xml" scheme="MIME">
<meta name="DC.Generator" content="XSLT stylesheet, xt by James Clark">
<meta name="DC.Identifier" content="">
<meta name="DC.Language" content="en-US">
<meta name="DC.Publisher" content="O'Reilly &amp; Associates, Inc.">
<meta name="DC.Source" content="" scheme="ISBN">
<meta name="DC.Subject.Keyword" content="">
<meta name="DC.Title" content="Standard Modules">
<meta name="DC.Type" content="Text.Monograph">

</head>

<body>

<!-- START OF BODY -->



<!-- TOP BANNER -->

<img src="gifs/smbanner.gif" usemap="#banner-map" border="0" alt="Book Home">
<map name="banner-map"><AREA SHAPE="RECT" COORDS="0,0,466,71" HREF="index.htm" ALT="Programming Perl"><AREA SHAPE="RECT" COORDS="467,0,514,18" HREF="jobjects/fsearch.htm" ALT="Search this book">
</map>

<!-- TOP NAV BAR -->

<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch31_22.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="part5.htm">Part 5: Reference Material</a></td><td align="right" valign="top" width="172"><a href="ch32_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- SECTION BODY -->
<h1 class="chapter">Chapter 32.  Standard Modules</h1>
<div class="htmltoc">
<h4 class="tochead">Contents:</h4>
<p>
<a href="ch32_01.htm">Listings by Type</a>
<br>
<a href="ch32_02.htm">Benchmark</a>
<br>
<a href="ch32_03.htm">Carp</a>
<br>
<a href="ch32_04.htm">CGI</a>
<br>
<a href="ch32_05.htm">CGI::Carp</a>
<br>
<a href="ch32_06.htm">Class::Struct</a>
<br>
<a href="ch32_07.htm">Config</a>
<br>
<a href="ch32_08.htm">CPAN</a>
<br>
<a href="ch32_09.htm">Cwd</a>
<br>
<a href="ch32_10.htm">Data::Dumper</a>
<br>
<a href="ch32_11.htm">DB_File</a>
<br>
<a href="ch32_12.htm">Dumpvalue</a>
<br>
<a href="ch32_13.htm">English</a>
<br>
<a href="ch32_14.htm">Errno</a>
<br>
<a href="ch32_15.htm">Exporter</a>
<br>
<a href="ch32_16.htm">Fatal</a>
<br>
<a href="ch32_17.htm">Fcntl</a>
<br>
<a href="ch32_18.htm">File::Basename</a>
<br>
<a href="ch32_19.htm">File::Compare</a>
<br>
<a href="ch32_20.htm">File::Copy</a>
<br>
<a href="ch32_21.htm">File::Find</a>
<br>
<a href="ch32_22.htm">File::Glob</a>
<br>
<a href="ch32_23.htm">File::Spec</a>
<br>
<a href="ch32_24.htm">File::stat</a>
<br>
<a href="ch32_25.htm">File::Temp</a>
<br>
<a href="ch32_26.htm">FileHandle</a>
<br>
<a href="ch32_27.htm">Getopt::Long</a>
<br>
<a href="ch32_28.htm">Getopt::Std</a>
<br>
<a href="ch32_29.htm">IO::Socket</a>
<br>
<a href="ch32_30.htm">IPC::Open2</a>
<br>
<a href="ch32_31.htm">IPC::Open3</a>
<br>
<a href="ch32_32.htm">Math::BigInt</a>
<br>
<a href="ch32_33.htm">Math::Complex</a>
<br>
<a href="ch32_34.htm">Math::Trig</a>
<br>
<a href="ch32_35.htm">Net::hostent</a>
<br>
<a href="ch32_36.htm">POSIX</a>
<br>
<a href="ch32_37.htm">Safe</a>
<br>
<a href="ch32_38.htm">Socket</a>
<br>
<a href="ch32_39.htm">Symbol</a>
<br>
<a href="ch32_40.htm">Sys::Hostname</a>
<br>
<a href="ch32_41.htm">Sys::Syslog</a>
<br>
<a href="ch32_42.htm">Term::Cap</a>
<br>
<a href="ch32_43.htm">Text::Wrap</a>
<br>
<a href="ch32_44.htm">Time::Local</a>
<br>
<a href="ch32_45.htm">Time::localtime</a>
<br>
<a href="ch32_46.htm">User::grent</a>
<br>
<a href="ch32_47.htm">User::pwent</a>
<br>
</p>
</div>

<p>
<a name="INDEX-5424"></a>
The previous edition of this book included comprehensive, definitive
coverage for all modules that were part of the standard Perl
distribution.  But if we did that again now, you'd pay twice what
you're paying for this book, not to mention what you'd have to pay the
chiropractor after trying to carry the book home.  Over the last few
years, more and more modules have come bundled standard; we're up to
around two hundred of them right now.  Some of these, such as
<tt class="literal">CGI</tt>, have remarkably extensive documentation in
their own right.  And if you're using ActiveState's distribution of
Perl, your standard library is even more luxed out.</p>

<p>So instead, we provide a complete listing of the standard modules,
sorted by type, along with a brief description of what each module
does.  Then we cherry pick a few of our favorite modules by providing
examples of typical uses, followed by a short description of how they
work, just to give you a taste of using them. The descriptions are
suggestive rather than comprehensive, and virtually all the modules
have features beyond those shown.  However, complete documentation for
all standard modules is included with every Perl distribution, so you
can just look up the details on your own system using the
<em class="emphasis">perldoc</em> program, your system's
<em class="emphasis">man</em>(1) command, or your favorite
browser. See the section "Online Documentation" in the Preface.  Ask
your Local Expert if you can't find the docs, because they're almost
certainly installed <em class="emphasis">somewhere</em> on your system.
Even if they're not, you can always read the pod docs directly from
the modules themselves, because all module docs come embedded in their
corresponding module (<em class="emphasis">.pm</em>) files, and pod was
designed to be somewhat readable.  (Unlike, say, HTML.)</p>


<h2 class="sect1">32.1. Listings by Type</h2>

<p>
<a name="INDEX-5425"></a>
Normal module names begin with an uppercase letter.  Lowercase names
indicate pragmas that you'll find documented in <a href="ch31_01.htm">Chapter 31, "Pragmatic Modules"</a>, rather than in this chapter.</p>







<h3 class="sect2">32.1.1. Data Types</h3>

<a name="INDEX-5426"></a><a name="INDEX-5427"></a>
<p>These modules extend Perl's type system (or lack thereof) in various
ways.</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Class::Struct</tt></td>
<td>
<p>Create <tt class="literal">struct</tt>-like Perl object classes
<a name="INDEX-5428"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">constant</tt></td>
<td>
<p>Declare constant scalars and lists</p>
</td>
</tr>

<tr>
<td><tt class="literal">integer</tt></td>
<td>
<p>Force Perl to do arithmetic with integers instead of floating point<a name="INDEX-5429"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Math::BigFloat</tt><a name="INDEX-5430"></a></td>
<td>
<p>Calculate with arbitrary length floating-point math<a name="INDEX-5431"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Math::BigInt</tt></td>
<td>
<p>Calculate with arbitrary length integer math<a name="INDEX-5432"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Math::Complex</tt></td>
<td>
<p>Calculate with complex numbers and associated mathematical functions<a name="INDEX-5433"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Math::Trig</tt></td>
<td>
<p>Load many trigonometric and related functions<a name="INDEX-5434"></a><a name="INDEX-5435"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">overload</tt></td>
<td>
<p>Overload Perl operators on objects<a name="INDEX-5436"></a><a name="INDEX-5437"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Symbol</tt></td>
<td>
<p>Manipulate Perl symbol tables and generate anonymous
typeglobs<a name="INDEX-5438"></a><a name="INDEX-5439"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Time::Local</tt></td>
<td>
<p>Efficiently compute epoch time given <tt class="literal">localtime</tt> or <tt class="literal">gmtime</tt><a name="INDEX-5440"></a><a name="INDEX-5441"></a><a name="INDEX-5442"></a><a name="INDEX-5443"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.2. String Processing, Language Text Processing, Parsing, and Searching</h3>

<p>
<a name="INDEX-5444"></a><a name="INDEX-5445"></a>
These modules do things with (or to) text.</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Search::Dict</tt></td>
<td>
<p>Use a binary search for a string in a sorted text file<a name="INDEX-5446"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Text::Abbrev</tt></td>
<td>
<p>Create an abbreviation table from a list<a name="INDEX-5447"></a><a name="INDEX-5448"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Text::ParseWords</tt></td>
<td>
<p>Parse text into a list of tokens or an array of arrays<a name="INDEX-5449"></a><a name="INDEX-5450"></a><a name="INDEX-5451"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Text::Soundex</tt></td>
<td>
<p>Use Knuth's Soundex algorithm</p>
</td>
</tr>

<tr>
<td><tt class="literal">Text::Tabs</tt></td>
<td>Expand or unexpand tabs like <em class="emphasis">expand</em>
(1) and <em class="emphasis">unexpand</em>
(1)</td>
</tr>

<tr>
<td><tt class="literal">Text::Wrap</tt></td>
<td>
<p>Wrap lines to form simple paragraphs<a name="INDEX-5452"></a><a name="INDEX-5453"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.3. Option, Argument, Parameter, and Configuration
File Processing</h3>

<p>
<a name="INDEX-5454"></a><a name="INDEX-5455"></a>
These modules process your command line.</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Getopt::Long</tt><a name="INDEX-5456"></a>
<a name="INDEX-5457"></a></td>
<td>Process extended command-line options in long form (<tt class="literal">--xxx</tt>)</td>
</tr>

<tr>
<td><tt class="literal">Getopt::Std</tt></td>
<td>
<p>Process single-character switches with switch clustering (<tt class="literal">-xyz</tt>)<a name="INDEX-5458"></a><a name="INDEX-5459"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.4. Filenames, Filesystems, and File Locking</h3>

<p>
<a name="INDEX-5460"></a><a name="INDEX-5461"></a>
These modules provide cross-platform methods of file access.</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Cwd</tt></td>
<td>
<p>Get the pathname of the current working directory<a name="INDEX-5462"></a><a name="INDEX-5463"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Basename</tt></td>
<td>
<p>Portably parse a pathname into directory, basename, and extension components<a name="INDEX-5464"></a><a name="INDEX-5465"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::CheckTree</tt></td>
<td>
<p>Run many file test checks on a set of directory trees<a name="INDEX-5466"></a><a name="INDEX-5467"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Compare</tt></td>
<td>
<p>Portably compare contents of filenames or filehandles<a name="INDEX-5468"></a><a name="INDEX-5469"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Copy</tt></td>
<td>
<p>Portably copy filenames or filehandles or move filenames<a name="INDEX-5470"></a><a name="INDEX-5471"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::DosGlob</tt></td>
<td>
<p>Do Microsoft-style fileglobbing<a name="INDEX-5472"></a><a name="INDEX-5473"></a><a name="INDEX-5474"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Find</tt></td>
<td>
<p>Traverse a file tree like <em class="emphasis">find</em>(1)<a name="INDEX-5475"></a><a name="INDEX-5476"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Glob</tt></td>
<td>
<p>Use Unix-style fileglobbing<a name="INDEX-5477"></a><a name="INDEX-5478"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Path</tt></td>
<td>
<p>Portably create or remove a series of directories<a name="INDEX-5479"></a><a name="INDEX-5480"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Spec</tt></td>
<td>Use portable filename operations (object-oriented interface)
<a name="INDEX-5481"></a><a name="INDEX-5482"></a></td>
</tr>

<tr>
<td><tt class="literal">File::Spec::Functions</tt></td>
<td>
<p>Use portable filename operations (functional interface)<a name="INDEX-5483"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Spec::Mac</tt></td>
<td>
<p>Use filename operations for Mac OS files<a name="INDEX-5484"></a><a name="INDEX-5485"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Spec::OS2</tt></td>
<td>
<p>Use filename operations for OS/2 files<a name="INDEX-5486"></a><a name="INDEX-5487"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Spec::Unix</tt></td>
<td>
<p>Use filename operations for Unix files<a name="INDEX-5488"></a><a name="INDEX-5489"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Spec::VMS</tt></td>
<td>
<p>Use filename operations for VMS files<a name="INDEX-5490"></a><a name="INDEX-5491"></a><a name="INDEX-5492"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::Spec::Win32</tt></td>
<td>
<p>Use filename operations for Microsoft files<a name="INDEX-5493"></a><a name="INDEX-5494"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">File::stat</tt></td>
<td>
<p>Override built-in <tt class="literal">stat</tt> and <tt class="literal">lstat</tt> functions with a method interface<a name="INDEX-5495"></a><a name="INDEX-5496"></a><a name="INDEX-5497"></a>
</p>
</td>
</tr>


</table>







<h3 class="sect2">32.1.5. Filehandle, Directory Handle, and
Stream I/O Utilities</h3>

<p>These modules provide object-oriented file, directory, and IPC access.
<a name="INDEX-5498"></a><a name="INDEX-5499"></a><a name="INDEX-5500"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">DirHandle</tt></td>
<td>
<p>Use object methods for directory handles<a name="INDEX-5501"></a><a name="INDEX-5502"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">FileCache</tt></td>
<td>
<p>Keep more files concurrently open for output than your system permits</p>
</td>
</tr>

<tr>
<td><tt class="literal">FileHandle</tt></td>
<td>
<p>Use object methods for filehandles<a name="INDEX-5503"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IO</tt></td>
<td>
<p>Provide a frontend to load all of <tt class="literal">IO::Dir</tt>, <tt class="literal">IO::File</tt>, <tt class="literal">IO::Handle</tt>,
<tt class="literal">IO::Pipe</tt>, <tt class="literal">IO::Seekable</tt>, and <tt class="literal">IO::Socket</tt><a name="INDEX-5504"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IO::Dir</tt></td>
<td>
<p>Use object methods for directory handles<a name="INDEX-5505"></a><a name="INDEX-5506"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IO::File</tt></td>
<td>
<p>Use file-related object methods for filehandles<a name="INDEX-5507"></a><a name="INDEX-5508"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IO::Handle</tt></td>
<td>
<p>Use generic object methods for filehandles<a name="INDEX-5509"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IO::Pipe</tt></td>
<td>
<p>Use object methods for pipes<a name="INDEX-5510"></a><a name="INDEX-5511"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IO::Poll</tt></td>
<td>
<p>Provide an object interface to <em class="emphasis">poll</em>(2) syscall<a name="INDEX-5512"></a><a name="INDEX-5513"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IO::Seekable</tt></td>
<td>
<p>Use object methods for seekable I/O objects<a name="INDEX-5514"></a><a name="INDEX-5515"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IO::Select</tt></td>
<td>
<p>Use a convenient OO interface to the <em class="emphasis">select</em>(2) syscall<a name="INDEX-5516"></a><a name="INDEX-5517"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">SelectSaver</tt></td>
<td>
<p>Save and restore selected filehandle<a name="INDEX-5518"></a><a name="INDEX-5519"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.6. Internationalization and Locale</h3>

<p>These modules help you perform Un-American Activities.
<a name="INDEX-5520"></a><a name="INDEX-5521"></a><a name="INDEX-5522"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">bytes</tt></td>
<td>
<p>Enforce old byte-oriented semantics<a name="INDEX-5523"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">charnames</tt></td>
<td>
<p>Define character names used in <tt class="literal">\N{</tt><em class="replaceable">name</em><tt class="literal">}</tt> escapes in string literals<a name="INDEX-5524"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">I18N::Collate</tt></td>
<td>
<p>Compare 8-bit scalar data according to current locale
(deprecated)<a name="INDEX-5525"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">locale</tt></td>
<td>
<p>Use or avoid POSIX locales for built-in operations<a name="INDEX-5526"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">utf8</tt></td>
<td>
<p>Turn on UTF-8 and Unicode support explicitly<a name="INDEX-5527"></a><a name="INDEX-5528"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.7. Operating System Interfaces</h3>

<p>
<a name="INDEX-5529"></a><a name="INDEX-5530"></a>
These modules tweak your interface to the operating system.</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Fcntl</tt></td>
<td>
<p>Load the C library's <em class="emphasis">fcntl.h</em> definitions as Perl constants<a name="INDEX-5531"></a><a name="INDEX-5532"></a><a name="INDEX-5533"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">filetest</tt></td>
<td>
<p>Control the file test operators (<tt class="literal">-r</tt>, <tt class="literal">-w</tt>, etc.) for
nontraditional filesystems</p>
</td>
</tr>

<tr>
<td><tt class="literal">open</tt></td>
<td>
<p>Set default disciplines for <tt class="literal">open</tt> function calls</p>
</td>
</tr>

<tr>
<td><tt class="literal">POSIX</tt></td>
<td>
<p>Use the Perl interface to POSIX 1003.1<a name="INDEX-5534"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Shell</tt></td>
<td>
<p>Run shell commands transparently within Perl<a name="INDEX-5535"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">sigtrap</tt></td>
<td>
<p>Enable simple signal handling<a name="INDEX-5536"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Sys::Hostname</tt></td>
<td>
<p>Portably try every conceivable way to determine the current hostname<a name="INDEX-5537"></a><a name="INDEX-5538"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Sys::Syslog</tt></td>
<td>
<p>Use the C library's <em class="emphasis">syslog</em>(3) functions<a name="INDEX-5539"></a><a name="INDEX-5540"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Time::gmtime</tt></td>
<td>
<p>Override the built-in <tt class="literal">gmtime</tt> function with a method interface<a name="INDEX-5541"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Time::localtime</tt></td>
<td>
<p>Override the built-in <tt class="literal">localtime</tt> function with a method interface<a name="INDEX-5542"></a><a name="INDEX-5543"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Time::tm</tt></td>
<td>
<p>Provide the internal object used by <tt class="literal">Time::gmtime</tt> and <tt class="literal">Time::localtime</tt><a name="INDEX-5544"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">User::grent</tt></td>
<td>
<p>Override built-in <tt class="literal">getgr*</tt> functions with a method interface<a name="INDEX-5545"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">User::pwent</tt></td>
<td>
<p>Override built-in <tt class="literal">getpw*</tt> functions with a method interface<a name="INDEX-5546"></a>
</p>
</td>
</tr>


</table>







<h3 class="sect2">32.1.8. Networking and Interprocess Communication</h3>

<p>These modules provide abstract interfaces around the basic
interfaces we wrote about in <a href="ch16_01.htm">Chapter 16, "Interprocess Communication"</a>.
<a name="INDEX-5547"></a><a name="INDEX-5548"></a><a name="INDEX-5549"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">IO::Socket</tt></td>
<td>
<p>Use a generic object interface to socket communications<a name="INDEX-5550"></a><a name="INDEX-5551"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IO::Socket::INET</tt></td>
<td>
<p>Use an object interface for Internet-domain sockets<a name="INDEX-5552"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IO::Socket::UNIX</tt></td>
<td>
<p>Use an object interface for Unix-domain (local) sockets<a name="INDEX-5553"></a><a name="INDEX-5554"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IPC::Msg</tt></td>
<td>
<p>Use object methods for working with System V messages
(SysV Msg IPC object class)<a name="INDEX-5555"></a><a name="INDEX-5556"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IPC::Open2</tt></td>
<td>
<p>Open a process for simultaneous reading and writing<a name="INDEX-5557"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IPC::Open3</tt></td>
<td>
<p>Open a process for reading, writing, and error handling<a name="INDEX-5558"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IPC::Semaphore</tt></td>
<td>
<p>Use object methods for System V semaphores<a name="INDEX-5559"></a><a name="INDEX-5560"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">IPC::SysV</tt></td>
<td>
<p>Define constants for all System V IPC mechanisms<a name="INDEX-5561"></a><a name="INDEX-5562"></a><a name="INDEX-5563"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Net::hostent</tt></td>
<td>
<p>Override built-in <tt class="literal">gethost*</tt> functions
with a method interface<a name="INDEX-5564"></a><a name="INDEX-5565"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Net::netent</tt></td>
<td>
<p>Override built-in <tt class="literal">getnet*</tt> functions
with a method interface<a name="INDEX-5566"></a><a name="INDEX-5567"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Net::Ping</tt></td>
<td>
<p>Check a remote host for reachability<a name="INDEX-5568"></a><a name="INDEX-5569"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Net::protoent</tt></td>
<td>
<p>Override built-in <tt class="literal">getproto*</tt> functions
with a method interface<a name="INDEX-5570"></a><a name="INDEX-5571"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Net::servent</tt></td>
<td>
<p>Override built-in <tt class="literal">getserv*</tt> functions
with a method interface<a name="INDEX-5572"></a><a name="INDEX-5573"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Socket</tt></td>
<td>
<p>Load the C library <em class="emphasis">socket.h</em> definitions and structure manipulators<a name="INDEX-5574"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.9. World Wide Web</h3>

<p>
<a name="INDEX-5575"></a><a name="INDEX-5576"></a>
These modules interface to the WWW.  You may have heard of it.</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">CGI</tt></td>
<td>
<p>Access CGI forms and powerful automated HTML generation<a name="INDEX-5577"></a><a name="INDEX-5578"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">CGI::Apache</tt></td>
<td>
<p>Make your CGI script work under the Perl-Apache API<a name="INDEX-5579"></a><a name="INDEX-5580"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">CGI::Carp</tt></td>
<td>
<p>Write to the <em class="emphasis">httpd</em>(8) (or other) CGI error log<a name="INDEX-5581"></a><a name="INDEX-5582"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">CGI::Cookie</tt></td>
<td>
<p>Set and get HTTP cookies<a name="INDEX-5583"></a><a name="INDEX-5584"></a><a name="INDEX-5585"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">CGI::Fast</tt></td>
<td>
<p>Use the Fast CGI protocol<a name="INDEX-5586"></a><a name="INDEX-5587"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">CGI::Pretty</tt></td>
<td>
<p>Produce nicely formatted HTML code<a name="INDEX-5588"></a><a name="INDEX-5589"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">CGI::Push</tt></td>
<td>
<p>Do server-push CGI scripting<a name="INDEX-5590"></a><a name="INDEX-5591"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.10. DBM Interfaces</h3>

<p>These modules load various database management libraries.
<a name="INDEX-5592"></a><a name="INDEX-5593"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">AnyDBM_File</tt></td>
<td>
<p>Provide a framework for multiple DBM libraries<a name="INDEX-5594"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">DB_File</tt></td>
<td>
<p>Provide tied access to the <em class="emphasis">db</em>(3) library (version 1.x Berkeley DB)<a name="INDEX-5595"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">GDBM_File</tt></td>
<td>
<p>Provide tied access to the <em class="emphasis">gdbm</em>(3) library<a name="INDEX-5596"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">NDBM_File</tt></td>
<td>
<p>Provide tied access to the <em class="emphasis">ndbm</em>(3) library<a name="INDEX-5597"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">SDBM_File</tt></td>
<td>
<p>Provide tied access to SDBM (simple DBM) files<a name="INDEX-5598"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.11. User Interfaces</h3>

<p>
<a name="INDEX-5599"></a><a name="INDEX-5600"></a>
These modules provide a decent OS CLI I/O API, ASAP.</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Term::Cap</tt></td>
<td>
<p>Use the <em class="emphasis">termcap</em>(3) library<a name="INDEX-5601"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Term::Complete</tt></td>
<td>
<p>Do programmable command completion on word lists<a name="INDEX-5602"></a><a name="INDEX-5603"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Term::ReadLine</tt></td>
<td>
<p>Use any of several readline packages<a name="INDEX-5604"></a><a name="INDEX-5605"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.12. Authentication, Security, and Encryption</h3>

<p>
<a name="INDEX-5606"></a><a name="INDEX-5607"></a><a name="INDEX-5608"></a><a name="INDEX-5609"></a>
These modules work with sandboxes.</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Opcode</tt></td>
<td>
<p>Enable or disable named opcodes when compiling Perl code
for use with the <tt class="literal">Safe</tt> module<a name="INDEX-5610"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ops</tt></td>
<td>
<p>Restrict unsafe operations when compiling<a name="INDEX-5611"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Safe</tt></td>
<td>
<p>Compile and execute code in restricted compartments<a name="INDEX-5612"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.13. Perl Language Extensions and Internals</h3>

<p>(Not to be confused with Intentions and Externals.)
<a name="INDEX-5613"></a><a name="INDEX-5614"></a><a name="INDEX-5615"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">attributes</tt></td>
<td>
<p>Get or set subroutine or variable attributes<a name="INDEX-5616"></a><a name="INDEX-5617"></a><a name="INDEX-5618"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">attrs</tt></td>
<td>
<p>Get or set subroutine or variable attributes (obsolete)<a name="INDEX-5619"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">base</tt></td>
<td>
<p>Establish inheritance of base class at compile time<a name="INDEX-5620"></a><a name="INDEX-5621"></a><a name="INDEX-5622"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Data::Dumper</tt></td>
<td>
<p>Serialize Perl data structures<a name="INDEX-5623"></a><a name="INDEX-5624"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">DB</tt></td>
<td>
<p>Access the Perl debugger's experimental API<a name="INDEX-5625"></a><a name="INDEX-5626"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Devel::DProf</tt></td>
<td>
<p>Profile a Perl program's execution<a name="INDEX-5627"></a><a name="INDEX-5628"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Devel::Peek</tt></td>
<td>
<p>Load data debugging tools for XS programmers<a name="INDEX-5629"></a><a name="INDEX-5630"></a><a name="INDEX-5631"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">diagnostics</tt></td>
<td>
<p>Force verbose warnings and suppress duplicates<a name="INDEX-5632"></a><a name="INDEX-5633"></a><a name="INDEX-5634"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Dumpvalue</tt></td>
<td>
<p>Provide screen dump of data<a name="INDEX-5635"></a><a name="INDEX-5636"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">English</tt></td>
<td>
<p>Use longer variable names for built-in punctuation variables<a name="INDEX-5637"></a><a name="INDEX-5638"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Env</tt></td>
<td>
<p>Access environment variables in <tt class="literal">%ENV</tt> as regular scalars<a name="INDEX-5639"></a><a name="INDEX-5640"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Errno</tt></td>
<td>
<p>Load the C library's <em class="emphasis">errno.h</em> definitions and tie the <tt class="literal">%!</tt> variable<a name="INDEX-5641"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Fatal</tt></td>
<td>
<p>Replace built-ins with versions that raise exceptions on failure<a name="INDEX-5642"></a><a name="INDEX-5643"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">fields</tt></td>
<td>
<p>Declare compile-time verified access to a class's data attributes<a name="INDEX-5644"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">less</tt></td>
<td>
<p>Request less of something from Perl (unimplemented)<a name="INDEX-5645"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">re</tt></td>
<td>
<p>Alter default regular expression behavior<a name="INDEX-5646"></a><a name="INDEX-5647"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">strict</tt></td>
<td>
<p>Restrict sloppy constructs<a name="INDEX-5648"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">subs</tt></td>
<td>
<p>Predeclare the subroutine names in current the package<a name="INDEX-5649"></a><a name="INDEX-5650"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">vars</tt></td>
<td>
<p>Predeclare global variables (obsolete--see <tt class="literal">our</tt> in <a href="ch29_01.htm">Chapter 29, "Functions"</a>)<a name="INDEX-5651"></a><a name="INDEX-5652"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.14. Convenient Classes</h3>

<p>
<a name="INDEX-5653"></a><a name="INDEX-5654"></a>
These modules provide base classes and other conveniences.</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Tie::Array</tt></td>
<td>
<p>Provide a base class for tied arrays<a name="INDEX-5655"></a><a name="INDEX-5656"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Tie::Handle</tt></td>
<td>
<p>Provide base class definitions for tied handles<a name="INDEX-5657"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Tie::Hash</tt></td>
<td>
<p>Provide base class definitions for tied hashes<a name="INDEX-5658"></a><a name="INDEX-5659"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Tie::RefHash</tt></td>
<td>
<p>Provide references as hash keys<a name="INDEX-5660"></a><a name="INDEX-5661"></a><a name="INDEX-5662"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Tie::Scalar</tt></td>
<td>
<p>Provide base class definitions for tied scalars<a name="INDEX-5663"></a><a name="INDEX-5664"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Tie::SubstrHash</tt></td>
<td>
<p>Hash a fixed-size table with a fixed-length key<a name="INDEX-5665"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">UNIVERSAL</tt></td>
<td>
<p>Provide a base class for <em class="emphasis">all</em> classes (blessed references)<a name="INDEX-5666"></a><a name="INDEX-5667"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.15. Warnings and Exceptions</h3>

<p>What to do when things go rwong.
<a name="INDEX-5668"></a><a name="INDEX-5669"></a><a name="INDEX-5670"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Carp</tt></td>
<td>
<p>Provide routines that <tt class="literal">warn</tt> and <tt class="literal">die</tt> from the perspective of the caller<a name="INDEX-5671"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">warnings</tt></td>
<td>
<p>Control warnings within the lexical scope<a name="INDEX-5672"></a><a name="INDEX-5673"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.16. Documentation Support</h3>

<p>And there's an awful lot of documentation to support.
<a name="INDEX-5674"></a><a name="INDEX-5675"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Pod::Checker</tt></td>
<td>
<p>Check pod documents for syntax errors (used by <em class="emphasis">podchecker</em>(1))<a name="INDEX-5676"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Pod::Functions</tt></td>
<td>
<p>List built-in functions by type<a name="INDEX-5677"></a><a name="INDEX-5678"></a><a name="INDEX-5679"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Pod::Html</tt></td>
<td>
<p>Convert pod files to HTML (used by <em class="emphasis">pod2html</em>(1))<a name="INDEX-5680"></a><a name="INDEX-5681"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Pod::InputObjects</tt><a name="INDEX-5682"></a></td>
<td>
<p>Manage documentation support</p>
</td>
</tr>

<tr>
<td><tt class="literal">Pod::Man</tt></td>
<td>
<p>Convert pod to <em class="emphasis">troff</em>(1) format for the <em class="emphasis">man</em>(1) system (used by <em class="emphasis">pod2man</em>(1))<a name="INDEX-5683"></a><a name="INDEX-5684"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Pod::Parser</tt></td>
<td>
<p>Provide a base class for creating pod filters and translators<a name="INDEX-5685"></a><a name="INDEX-5686"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Pod::Select</tt></td>
<td>
<p>Extract selected sections of pod from input (used by <em class="emphasis">podselect</em>(1))<a name="INDEX-5687"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Pod::Text</tt></td>
<td>
<p>Convert pod data to formatted ASCII text
(used by <em class="emphasis">pod2text</em>(1))<a name="INDEX-5688"></a><a name="INDEX-5689"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Pod::Text::Color</tt></td>
<td>
<p>Convert pod data to formatted ASCII text with ANSI color escapes</p>
</td>
</tr>

<tr>
<td><tt class="literal">Pod::Text::Termcap</tt></td>
<td>
<p>Convert pod data to ASCII text with terminal-specific escapes<a name="INDEX-5690"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Pod::Usage</tt></td>
<td>
<p>Print a usage message derived from embedded pod documentation<a name="INDEX-5691"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.17. Module Installation Support</h3>

<p>These modules help other modules jump through various hoops.
<a name="INDEX-5692"></a><a name="INDEX-5693"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">AutoLoader</tt></td>
<td>
<p>Load subroutines only on demand<a name="INDEX-5694"></a><a name="INDEX-5695"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">AutoSplit</tt></td>
<td>
<p>Split a package for autoloading<a name="INDEX-5696"></a><a name="INDEX-5697"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">autouse</tt></td>
<td>
<p>Postpone module loading until a function is used from that module<a name="INDEX-5698"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">blib</tt></td>
<td>
<p>Use the library from <tt class="literal">MakeMaker</tt>'s uninstalled version of an extension<a name="INDEX-5699"></a><a name="INDEX-5700"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Config</tt></td>
<td>
<p>Access Perl configuration information<a name="INDEX-5701"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">CPAN</tt></td>
<td>
<p>Query, download, and build Perl modules from CPAN sites<a name="INDEX-5702"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Devel::SelfStubber</tt></td>
<td>
<p>Generate stubs for a module using <tt class="literal">SelfLoader</tt><a name="INDEX-5703"></a><a name="INDEX-5704"></a><a name="INDEX-5705"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">DynaLoader</tt></td>
<td>
<p>Dynamically load C or C++ libraries as Perl extensions<a name="INDEX-5706"></a><a name="INDEX-5707"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Exporter</tt></td>
<td>
<p>Implement default import method for traditional modules<a name="INDEX-5708"></a><a name="INDEX-5709"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::Command</tt></td>
<td>
<p>Provide utilities to replace common external commands in <em class="emphasis">Makefile</em><a name="INDEX-5710"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::Embed</tt></td>
<td>
<p>Provide utilities for embedding Perl in C or C++ programs<a name="INDEX-5711"></a><a name="INDEX-5712"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::Install</tt></td>
<td>
<p>Install files into the system's Perl library<a name="INDEX-5713"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::Installed</tt></td>
<td>
<p>Manage inventory of installed modules<a name="INDEX-5714"></a><a name="INDEX-5715"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::Liblist</tt></td>
<td>
<p>Determine which libraries to use and how to use them<a name="INDEX-5716"></a><a name="INDEX-5717"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::MakeMaker</tt></td>
<td>
<p>Create a <em class="emphasis">Makefile</em> for a Perl extension<a name="INDEX-5718"></a><a name="INDEX-5719"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::Manifest</tt></td>
<td>
<p>Load tools to write and check a <em class="emphasis">MANIFEST</em> file<a name="INDEX-5720"></a><a name="INDEX-5721"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::Miniperl</tt></td>
<td>
<p>Write the C code for <em class="emphasis">perlmain.c</em>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::Mkbootstrap</tt></td>
<td>
<p>Create a bootstrap file for use by <tt class="literal">DynaLoader</tt><a name="INDEX-5722"></a><a name="INDEX-5723"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::Mksymlists</tt></td>
<td>
<p>Write linker options files for dynamic extension<a name="INDEX-5724"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::MM_Cygwin</tt></td>
<td>
<p>Override Unix behavior methods in <tt class="literal">ExtUtils::MakeMaker</tt><a name="INDEX-5725"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::MM_OS2</tt></td>
<td>
<p>Override Unix behavior methods in <tt class="literal">ExtUtils::MakeMaker</tt><a name="INDEX-5726"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::MM_Unix</tt></td>
<td>
<p>Provide methods used by <tt class="literal">ExtUtils::MakeMaker</tt><a name="INDEX-5727"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::MM_VMS</tt></td>
<td>
<p>Override Unix behavior methods in <tt class="literal">ExtUtils::MakeMaker</tt><a name="INDEX-5728"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::MM_Win32</tt></td>
<td>
<p>Override Unix behavior methods in <tt class="literal">ExtUtils::MakeMaker</tt><a name="INDEX-5729"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::Packlist</tt></td>
<td>
<p>Manage <em class="emphasis">.packlist</em> files<a name="INDEX-5730"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ExtUtils::testlib</tt></td>
<td>
<p>Add <em class="emphasis">blib/*</em> directories to <tt class="literal">@INC</tt><a name="INDEX-5731"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">FindBin</tt></td>
<td>
<p>Locate installation directory of the Perl program that is running<a name="INDEX-5732"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">lib</tt></td>
<td>
<p>Manipulate <tt class="literal">@INC</tt> at compile time<a name="INDEX-5733"></a><a name="INDEX-5734"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">SelfLoader</tt></td>
<td>
<p>Load functions only on demand<a name="INDEX-5735"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">XSLoader</tt></td>
<td>
<p>Dynamically load C or C++ libraries as Perl extensions<a name="INDEX-5736"></a><a name="INDEX-5737"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.18. Development Support</h3>

<p>These modules are for timing and testing, to see how much faster
and cleaner your code doesn't run anymore.
<a name="INDEX-5738"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Benchmark</tt></td>
<td>
<p>Compare running times of alternate code versions<a name="INDEX-5739"></a><a name="INDEX-5740"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Test</tt></td>
<td>
<p>Use a simple framework for writing test scripts<a name="INDEX-5741"></a><a name="INDEX-5742"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Test::Harness</tt></td>
<td>
<p>Run standard test scripts with statistics<a name="INDEX-5743"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.19. Perl Compiler and Code Generator</h3>

<p>These modules support various backend code generators for Perl.
<a name="INDEX-5744"></a><a name="INDEX-5745"></a><a name="INDEX-5746"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">B</tt></td>
<td>
<p>Load Perl code generators (a.k.a. the "Perl compiler")<a name="INDEX-5747"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Asmdata</tt></td>
<td>
<p>Provide autogenerated data about Perl ops to produce bytecode<a name="INDEX-5748"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Assembler</tt></td>
<td>
<p>Assemble Perl bytecode<a name="INDEX-5749"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Bblock</tt></td>
<td>
<p>Walk basic blocks in the syntax tree<a name="INDEX-5750"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Bytecode</tt></td>
<td>
<p>Use the Perl compiler's bytecode backend<a name="INDEX-5751"></a><a name="INDEX-5752"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::C</tt></td>
<td>
<p>Use the Perl compiler's C translation backend<a name="INDEX-5753"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::CC</tt></td>
<td>
<p>Use the Perl compiler's optimized C translation backend<a name="INDEX-5754"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Debug</tt></td>
<td>
<p>Walk the Perl syntax tree, printing debug info about ops<a name="INDEX-5755"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Deparse</tt></td>
<td>
<p>Use the Perl compiler backend to reproduce Perl code<a name="INDEX-5756"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Disassembler</tt></td>
<td>
<p>Disassemble Perl bytecode<a name="INDEX-5757"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Lint</tt></td>
<td>
<p>Catch dubious constructs<a name="INDEX-5758"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Showlex</tt></td>
<td>
<p>Show lexical variables used in functions or files<a name="INDEX-5759"></a><a name="INDEX-5760"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Stash</tt></td>
<td>
<p>Show what stashes are loaded<a name="INDEX-5761"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Terse</tt></td>
<td>
<p>Walk the Perl syntax tree, printing terse info about ops<a name="INDEX-5762"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">B::Xref</tt></td>
<td>
<p>Generate cross-reference reports for Perl programs<a name="INDEX-5763"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">ByteLoader</tt></td>
<td>
<p>Load byte-compiled Perl code<a name="INDEX-5764"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">O</tt></td>
<td>
<p>Provide a generic interface to Perl compiler backends<a name="INDEX-5765"></a><a name="INDEX-5766"></a>
</p>
</td>
</tr>


</table>






<h3 class="sect2">32.1.20. Microsoft-Related Modules</h3>

<p>If you got the Perl distribution for Microsoft systems from
ActiveState, you already have the following Microsoft-only modules
included for you.  If you just grabbed the standard source distribution
(maybe you want to build it under the Cygwin Unix-emulation environment) but you're running on Wintel, you can get all of these modules 
from CPAN.
<a name="INDEX-5767"></a><a name="INDEX-5768"></a>
</p>

<table border="1">

<tr>
<th>Module</th>
<th>Description</th>
</tr>




<tr>
<td><tt class="literal">Win32::ChangeNotify</tt></td>
<td>
<p>Monitor events related to files and directories<a name="INDEX-5769"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::Console</tt></td>
<td>
<p>Use Win32 console and character mode functions<a name="INDEX-5770"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::Event</tt></td>
<td>
<p>Use Win32 event objects from Perl<a name="INDEX-5771"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::EventLog</tt></td>
<td>
<p>Process Win32 event logs from Perl<a name="INDEX-5772"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::File</tt></td>
<td>
<p>Manage file attributes in Perl<a name="INDEX-5773"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::FileSecurity</tt><a name="INDEX-5774"></a><a name="INDEX-5775"></a></td>
<td>
<p>Manage FileSecurity Discretionary Access Control Lists in Perl</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::IPC</tt></td>
<td>
<p>Load the base class for Win32 synchronization objects<a name="INDEX-5776"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::Internet</tt></td>
<td>
<p>Access <em class="emphasis">WININET.DLL</em> functions<a name="INDEX-5777"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::Mutex</tt></td>
<td>
<p>Use Win32 mutex objects from Perl<a name="INDEX-5778"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::NetAdmin</tt></td>
<td>
<p>Manage network groups and users in Perl<a name="INDEX-5779"></a><a name="INDEX-5780"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::NetResource</tt><a name="INDEX-5781"></a></td>
<td>
<p>Manage network resources in Perl</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::ODBC</tt></td>
<td>
<p>Use ODBC Extension for Win32<a name="INDEX-5782"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::OLE</tt></td>
<td>
<p>Use OLE automation extensions<a name="INDEX-5783"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::OLE::Const</tt></td>
<td>
<p>Extract constant definitions from <em class="emphasis">TypeLib</em><a name="INDEX-5784"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::OLE::Enum</tt></td>
<td>
<p>Use OLE Automation Collection Objects<a name="INDEX-5785"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::OLE::NLS</tt></td>
<td>
<p>Use OLE National Language Support<a name="INDEX-5786"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::OLE::Variant</tt></td>
<td>
<p>Create and modify OLE VARIANT variables<a name="INDEX-5787"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::PerfLib</tt></td>
<td>
<p>Access the Windows NT Performance Counter<a name="INDEX-5788"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::Process</tt></td>
<td>
<p>Create and manipulate processes<a name="INDEX-5789"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::Semaphore</tt></td>
<td>
<p>Use Win32 semaphore objects<a name="INDEX-5790"></a><a name="INDEX-5791"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::Service</tt></td>
<td>
<p>Manage system services<a name="INDEX-5792"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::Sound</tt></td>
<td>
<p>Play with Windows sounds<a name="INDEX-5793"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32::TieRegistry</tt></td>
<td>
<p>Mung the registry<a name="INDEX-5794"></a><a name="INDEX-5795"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32API::File</tt></td>
<td>
<p>Access low-level Win32 system API calls for files and directories
<a name="INDEX-5796"></a><a name="INDEX-5797"></a>
</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32API::Net</tt><a name="INDEX-5798"></a></td>
<td>
<p>Manage Windows NT LanManager accounts</p>
</td>
</tr>

<tr>
<td><tt class="literal">Win32API::Registry</tt><a name="INDEX-5799"></a></td>
<td>
<p>Access low-level Win32 system API calls from <em class="emphasis">WINREG.H</em>
</p>
</td>
</tr>


</table>


















































































































































































































































































































































































































































<a name="INDEX-5821"></a>


<!-- BOTTOM NAV BAR -->

<hr width="515" align="left">
<div class="navbar">
<table width="515" border="0">
<tr>
<td align="left" valign="top" width="172"><a href="ch31_22.htm"><img src="../gifs/txtpreva.gif" alt="Previous" border="0"></a></td><td align="center" valign="top" width="171"><a href="index.htm"><img src="../gifs/txthome.gif" alt="Home" border="0"></a></td><td align="right" valign="top" width="172"><a href="ch32_02.htm"><img src="../gifs/txtnexta.gif" alt="Next" border="0"></a></td>
</tr>
<tr>
<td align="left" valign="top" width="172">31.22. use warnings</td><td align="center" valign="top" width="171"><a href="index/index.htm"><img src="../gifs/index.gif" alt="Book Index" border="0"></a></td><td align="right" valign="top" width="172">32.2. Benchmark</td>
</tr>
</table>
</div>
<hr width="515" align="left">

<!-- LIBRARY NAV BAR -->

<img src="../gifs/smnavbar.gif" usemap="#library-map" border="0" alt="Library Navigation Links"><p>
<font size="-1"><a href="copyrght.htm">Copyright &copy; 2001</a> O'Reilly &amp; Associates. All rights reserved.</font>
</p>
<map name="library-map"> <area shape="rect" coords="2,-1,79,99" href="../index.htm"><area shape="rect" coords="84,1,157,108" href="../perlnut/index.htm"><area shape="rect" coords="162,2,248,125" href="../prog3/index.htm"><area shape="rect" coords="253,2,326,130" href="../advprog/index.htm"><area shape="rect" coords="332,1,407,112" href="../cookbook/index.htm"><area shape="rect" coords="414,2,523,103" href="../sysadmin/index.htm">
</map>

<!-- END OF BODY -->

</body>
</html>


<br>


<table border=0 align=center>
<tr><td>


<script type="text/javascript"><!--
google_ad_client = "pub-0321943928525350";
/* 468x60, main footer */
google_ad_slot = "1100896219";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>

<script>
user = "2823";
page = "2";

</script>



</td>
<td>

<!-- Ukrainian Banner Network 468x60 START -->
<center>
<script>
//<!--
user = "2823";
page = "2";
pid = Math.round((Math.random() * (10000000 - 1)));
document.write("<iframe src='http://banner.kiev.ua/cgi-bin/bi.cgi?h" +
user + "&amp;"+ pid + "&amp;" + page + "' frameborder=0 vspace=0 hspace=0 " +
" width=468 height=60 marginwidth=0 marginheight=0 scrolling=no>");
document.write("<a href='http://banner.kiev.ua/cgi-bin/bg.cgi?" +
user + "&amp;"+ pid + "&amp;" + page + "' target=_top>");
document.write("<img border=0 src='http://banner.kiev.ua/" +
"cgi-bin/bi.cgi?i" + user + "&amp;" + pid + "&amp;" + page +
"' width=468 height=60 alt='хЛТБЙОУЛБС вБООЕТОБС уЕФШ'></a>");
document.write("</iframe>");
//-->
</script>
</center>
<!-- Ukrainian Banner Network 468x60 END -->


</td></tr>
<tr><td colspan=2>
<br>
<hr size=1>



<!-- SpyLOG -->
<script src="http://tools.spylog.ru/counter_cv.js" id="spylog_code" type="text/javascript" counter="1028713" part="docs" track_links="ext" page_level="0">
</script>
<noscript>
<a href="http://u10287.13.spylog.com/cnt?cid=1028713&f=3&p=0" target="_blank">
<img src="http://u10287.13.spylog.com/cnt?cid=1028713&p=0" alt="SpyLOG" border="0" width="88" height="31"></a>
</noscript>
<!--/ SpyLOG -->

<!--bigmir)net TOP 100-->
<script type="text/javascript" language="javascript"><!--
function BM_Draw(oBM_STAT){
document.write('<table cellpadding="0" cellspacing="0" border="0" style="display:inline;margin-right:4px;"><tr><td><div style="margin:0px;padding:0px;font-size:1px;width:88px;"><div style="background:url(\'http://i.bigmir.net/cnt/samples/diagonal/b59_top.gif\') no-repeat bottom;">&nbsp;</div><div style="font:10px Tahoma;background:url(\'http://i.bigmir.net/cnt/samples/diagonal/b59_center.gif\');"><div style="text-align:center;"><a href="http://www.bigmir.net/" target="_blank" style="color:#0000ab;text-decoration:none;font:10px Tahoma;">bigmir<span style="color:#ff0000;">)</span>net</a></div><div style="margin-top:3px;padding: 0px 6px 0px 6px;color:#003596;"><div style="float:left;font:10px Tahoma;">'+oBM_STAT.hosts+'</div><div style="float:right;font:10px Tahoma;">'+oBM_STAT.hits+'</div></div><br clear="all"/></div><div style="background:url(\'http://i.bigmir.net/cnt/samples/diagonal/b59_bottom.gif\') no-repeat top;">&nbsp;</div></div></td></tr></table>');
}
//-->
</script>

<script type="text/javascript" language="javascript"><!--
bmN=navigator,bmD=document,bmD.cookie='b=b',i=0,bs=[],bm={o:1,v:126595,s:126595,t:0,c:bmD.cookie?1:0,n:Math.round((Math.random()* 1000000)),w:0};
for(var f=self;f!=f.parent;f=f.parent)bm.w++;
try{if(bmN.plugins&&bmN.mimeTypes.length&&(x=bmN.plugins['Shockwave Flash']))bm.m=parseInt(x.description.replace(/([a-zA-Z]|s)+/,''));
else for(var f=3;f<20;f++)if(eval('new ActiveXObject("ShockwaveFlash.ShockwaveFlash.'+f+'")'))bm.m=f}catch(e){;}
try{bm.y=bmN.javaEnabled()?1:0}catch(e){;}
try{bmS=screen;bm.v^=bm.d=bmS.colorDepth||bmS.pixelDepth;bm.v^=bm.r=bmS.width}catch(e){;}
r=bmD.referrer.slice(7);if(r&&r.split('/')[0]!=window.location.host){bm.f=escape(r);bm.v^=r.length}
bm.v^=window.location.href.length;for(var x in bm) if(/^[ovstcnwmydrf]$/.test(x)) bs[i++]=x+bm[x];
bmD.write('<sc'+'ript type="text/javascript" language="javascript" src="http://c.bigmir.net/?'+bs.join('&')+'"></sc'+'ript>');
//-->
</script>
<noscript>
<a href="http://www.bigmir.net/" target="_blank"><img src="http://c.bigmir.net/?v126595&s126595&t2" width="88" height="31" alt="bigmir)net TOP 100" title="bigmir)net TOP 100" border="0" /></a>
</noscript>
<!--bigmir)net TOP 100-->

<!--begin of Rambler's Top100 code -->
<a href="http://top100.rambler.ru/top100/">
<img src="http://counter.rambler.ru/top100.cnt?692798" alt="" width=1 height=1 border=0></a>
<!--end of Top100 code-->

<!--begin of Top100 logo-->
<a href="http://top100.rambler.ru/top100/">
<img src="http://top100-images.rambler.ru/top100/w1.gif" alt="Rambler's Top100" width=88 height=31 
border=0></a>
<!--end of Top100 logo -->


<!-- hit.ua -->
<a href='http://hit.ua/?x=3601' target='_blank'>
<script language="javascript" type="text/javascript"><!--
Cd=document;Cr="&"+Math.random();Cp="&s=1";
Cd.cookie="b=b";if(Cd.cookie)Cp+="&c=1";
Cp+="&t="+(new Date()).getTimezoneOffset();
if(self!=top)Cp+="&f=1";
//--></script>
<script language="javascript1.1" type="text/javascript"><!--
if(navigator.javaEnabled())Cp+="&j=1";
//--></script>
<script language="javascript1.2" type="text/javascript"><!--
if(typeof(screen)!='undefined')Cp+="&w="+screen.width+"&h="+
screen.height+"&d="+(screen.colorDepth?screen.colorDepth:screen.pixelDepth);
//--></script>
<script language="javascript" type="text/javascript"><!--
Cd.write("<img src='http://c.hit.ua/hit?i=3601&g=0&x=1"+Cp+Cr+
"&r="+escape(Cd.referrer)+"&u="+escape(window.location.href)+
"' border='0' width='88' height='31' "+
"alt='hit.ua: сейчас на сайте, посетителей и просмотров за сегодня' title='hit.ua: сейчас на сайте, посетителей и просмотров за сегодня'/>");
//--></script>
<noscript>
<img src='http://c.hit.ua/hit?i=3601&amp;g=0&amp;x=1' border='0' width='88' height='31' alt='hit.ua: сейчас на сайте, посетителей и просмотров за сегодня' title='hit.ua: сейчас на сайте, посетителей и просмотров за сегодня'/>
</noscript></a>
<!-- / hit.ua -->

<script language="javascript">//<!--
mtI="012408140822";mtG="45";mtT="4";mtS='http://012408140822.c.mystat-in.net/?';
mtD=document;mtN=navigator.appName;mtR=escape(mtD.referrer);
mtW="";mtC="";mtV="0";mtJ="1";
//--></script><script language="javascript1.1">//<!--
mtV="1";mtJ = (navigator.javaEnabled()?"1":"0");
//--></script><script language="javascript1.2">//<!--
mtE=screen;mtW=mtE.width;mtN!="Netscape"?mtC=mtE.colorDepth:mtC=mtE.pixelDepth;mtV="2";
//--></script><script language="javascript1.3">//<!--
mtV="3";
//--></script><script language="javascript">//<!--
mtUrl="";mtUrl+="\""+mtS+"i"+mtI+"&t"+mtT+"&g"+mtG+"&w"+mtW+"&c"+mtC+"&r"+mtR+"&v"+mtV+"&j"+mtJ+"\"";
mtUrl="<a href=http://mytop-in.net/ target=_blank><img src="+mtUrl+"width=88 height=31 border=0 alt=\"Rated by MyTOP\"></a>";
mtD.write(mtUrl);
//--></script>
<noscript>
<a href=http://mytop-in.net/ target=_blank><img src=http://012408140822.c.mystat-in.net/?i012408140822&t4&g45&j0 width=88 height=31 border=0 alt="Rated by MyTOP"></a>
</noscript>

<!--Rating@Mail.ru COUNTEr--><script language="JavaScript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer)
js=10//--></script><script language="JavaScript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled()
js=11//--></script><script language="JavaScript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
js=12//--></script><script language="JavaScript1.3" type="text/javascript"><!--
js=13//--></script><script language="JavaScript" type="text/javascript"><!--
d.write('<a href="http://top.mail.ru/jump?from=1374183"'+
' target=_top><img src="http://d7.cf.b4.a1.top.list.ru/counter'+
'?id=1374183;t=48;js='+js+a+';rand='+Math.random()+
'" alt="Рейтинг@Mail.ru"'+' border=0 height=31 width=88/><\/a>')
if(11<js)d.write('<'+'!-- ')//--></script><noscript><a
target=_top href="http://top.mail.ru/jump?from=1374183"><img
src="http://d7.cf.b4.a1.top.list.ru/counter?js=na;id=1374183;t=48"
border=0 height=31 width=88
alt="Рейтинг@Mail.ru"/></a></noscript><script language="JavaScript" type="text/javascript"><!--
if(11<js)d.write('--'+'>')//--></script><!--/COUNTER-->

<!-- I.UA counter --><a href="http://www.i.ua/" target="_blank" onclick="this.href='http://i.ua/r.php?21595';" title="Rated by I.UA">
<script type="text/javascript" language="javascript"><!--
iS='<img src="http://r.i.ua/s?u21595&p66&n'+Math.random();
iD=document;iD.cookie="iua=1";if(iD.cookie)iS+='&c1';
iS+='&d'+(screen.colorDepth?screen.colorDepth:screen.pixelDepth)
+"&w"+screen.width+'&h'+screen.height
iT=iD.referrer.slice(7);iH=window.location.href.slice(7);
((iI=iT.indexOf('/'))!=-1)?(iT=iT.substring(0,iI)):(iI=iT.length);
if(iT!=iH.substring(0,iI))iS+='&f'+escape(iD.referrer.slice(7))
iS+='&r'+escape(iH);
iD.write(iS+'" border="0" width="88" height="31" />');
//--></script></a><!-- End of I.UA counter -->

<script type="text/javascript">
<!--
Nnv=navigator;Nna=Nnv.appName;Nd=document;Nd.cookie="b=b";Nc=0;if(Nd.cookie)Nc=1;
Nn=(Nna.substring(0,2)=="Mi")?0:1;Ns=screen;Npx=(Nn==0)?Ns.colorDepth:Ns.pixelDepth;
str='<img src="http://c.uarating.com/199;'+Ns.width+'x'+Ns.height+';'+Npx+';'+Nc+';';
str=str+escape(Nd.referrer)+';'+Math.random()+'" width="88" height="31" border="0">';
document.write('<a href="http://www.uarating.com/" alt="uaRating" target="_blank">'+str+'<\/a>');
// -->
</script>
<noscript><a href="http://www.uarating.com/" target="_blank"><img src="http://c.uarating.com/199;0x0;0;0;-;0" alt="uaRating" width="88" height="31" border="0"></a></noscript>


</td></tr>
</table>


</body>
</html>