#!/bin/tcsh -f

init:
	set lan_ip_1="192";
	set lan_ip_2="168";
	set lan_ip_3="0";
	set lan_ip_4="8";
	set wifi_ip_4="4";

	#set use_wifi;

	set shares=( "art" "art/games" "art/media" "art/www" "projects" "projects/gtk" "projects/cli" "projects/references" "media" "media/library" "media/podcasts" "media/podiobooks" "media/music" "media/videos" "media/torrents" "uberChick" "programs" "profile.d" "srv" );
#init:


next_mount:
	while( ${?1} && "${1}" != "" )
		set dashes="`printf "\""%s"\"" "\""${1}"\"" | sed -r 's/([\-]{1,2})([^=]+)=?['\''"\""]?(.*)['\''"\""]?/\1/'`";
		set option="`printf "\""%s"\"" "\""${1}"\"" | sed -r 's/([\-]{1,2})([^=]+)=?['\''"\""]?(.*)['\''"\""]?/\2/'`";
		set value="`printf "\""%s"\"" "\""${1}"\"" | sed -r 's/([\-]{1,2})([^=]+)=?['\''"\""]?(.*)['\''"\""]?/\3/'`";
		switch( ${option} )
			case "via-lan":
				if(! ${?use_wifi} ) \
					breaksw;
				
				unset use_wifi;
				
				if( ${?server} ) \
					unset server;
				
				breaksw;
			
			case "via-wifi":
				if( ${?use_wifi} ) \
					breaksw;
				
				set use_wifi;
				
				if( ${?server} ) \
					unset server;
				
				breaksw;
			
			case "ip":
			case "use-ip":
			case "via-ip":
				set ip_1="`printf '%s' '${value}' | sed -r 's/^([0-9]{1,3}\.)?([0-9]{1,3}\.)([0-9]{1,3}\.)([0-9]{1,3}))"\$"/\1/'`";
				if(!( "${ip_1}" != "${value}" && "${ip_1}" != "" )) \
					set ip_1="${lan_ip_1}.";
				
				set ip_2"`printf '%s' '${value}' | sed -r 's/^([0-9]{1,3}\.)?([0-9]{1,3}\.)?([0-9]{1,3}\.)([0-9]{1,3}))"\$"/\2/'`";
				if(!( "${ip_2}" != "${value}" && "${ip_2}" != "" )) \
					set ip_2="${lan_ip_2}.";
				
				set ip_3="`printf '%s' '${value}' | sed -r 's/^([0-9]{1,3}\.)?([0-9]{1,3}\.)([0-9]{1,3}\.)([0-9]{1,3}))"\$"/\3/'`";
				if(!( "${ip_3}" != "${value}" && "${ip_3}" != "" )) \
					set ip_3="${lan_ip_3}.";
				
				set ip_4="`printf '%s' '${value}' | sed -r 's/^([0-9]{1,3}\.)?([0-9]{1,3}\.)?([0-9]{1,3}\.)?([0-9]{1,3}))"\$"/\4/'`";
				if(!( "${ip_4}" != "${value}" && "${ip_4}" != "" )) then
					if(! ${use_wifi} ) then
						set ip_4="${lan_ip_4}";
					else
						set ip_4="${wifi_ip_4}";
					endif
				
				set server="${ip_1}${ip_2}${ip_3}${ip_4}";
				breaksw;
			
			case "mount":
				set action="mount";
				set to_or_from="to";
				breaksw;
			
			case "umount":
				set action="umount";
				set to_or_from="from";
				breaksw;
			
			case "help":
				goto usage;
				breaksw;
			
			case "server":
				set server="${value}";
				breaksw;
			
			default:
				if(! ${?action} ) then
					if(! ${?help_displayed} ) \
						goto usage;
				endif
				set single_mount="${1}";
				shift;
				goto mount_shares;
			breaksw;
		endsw
		shift;
	end
#next_mount:


mount_shares:
	if(! ${?action} ) then
		if(! ${?help_displayed} ) \
			goto usage;
	endif
	
	if(! ${?server} ) then
		if(! ${?use_wifi} ) then
			set server="${lan_ip_1}.${lan_ip_2}.${lan_ip_3}.${lan_ip_4}";
		else
			set server="${lan_ip_1}.${lan_ip_2}.${lan_ip_3}.${wifi_ip_4}";
		endif
	endif
	
	set use_sudo="";
	if( "${uid}" != "0" ) \
		set use_sudo="sudo";
	foreach share ( ${shares} )
		if( ${?single_mount} ) then
			if( "${single_mount}" != "/${share}" && "${single_mount}" != "/${share}/nfs" ) \
				continue;
		endif
		printf "%sing %s:/%s %s /%s/nfs\n" "${action}" "${server}" "${share}" "${to_or_from}" "${share}";
		if( "${action}" == "umount" ) then
			set nfs_umount_test="`/bin/mount | grep '/${share}/nfs'`"
			if( ${#nfs_umount_test} > 0 ) then
				${use_sudo} ${action} -f "/${share}/nfs";
			else
				printf "%s:/%s isn't mounted\t[skipping]\n" "${server}" "${share}";
			endif
			
			unset nfs_umount_test;
			
			if(! ${?single_mount} ) \
				continue;
			
			if( "${1}" != "" ) \
				goto next_mount;
			
			goto exit_script;
		endif
		
		if(! -d "/${share}/nfs" ) then
			if(! -e "/${share}/nfs" ) then
				mkdir -p "/${share}/nfs";
			else
				printf "%s is already mounted but the connection has been terminated.\n\tAttempting remount\n" "${share}";
				@ umount_attempt=0;
				while( ! -d "/${share}/nfs" && $umount_attempt < 5 )
					@ umount_attempt++;
					${use_sudo} umount -f "${share}";
				end
			endif
		endif
		
		${use_sudo} ${action} -t nfs4 -o defaults,users "${server}:/${share}" "/${share}/nfs";
		
		if(! ${?single_mount} ) \
			continue;
		
		if( "${1}" != "" ) \
			goto next_mount;
		
		goto exit_script;
	end
#mount_shares:


exit_script:
	if( ${?single_mount} ) \
		unset single_mount;
	if( ${?script} ) \
		unset script;
	if( ${?action} ) \
		unset action;
	unset server shares share  to_or_from
	exit;
#exit_script:


usage:
	set help_displayed;
	set script="`basename '${0}'`";
	printf "%s --mount|umount [nfs4_share...]\n" "${script}";
	printf "\tBy default %s mounts all nfs4 shares.\n\t[nfs4_share] is optional.\n\tIf specified only those shares are mouted, or unmouted.\n\tAvailable shares are:\n" "${script}";
	foreach share ( ${shares} )
		printf "\t\t%s:/%s on %s\n" "${server}" "${share}";
	end
	if(! ${?action} ) \
		goto exit_script;
	
	goto next_mount
#usage:


