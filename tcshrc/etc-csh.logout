#!/bin/tcsh -f
if( ${?TCSH_RC_DEBUG} ) unsetenv TCSH_RC_DEBUG;
#if(! ${?TCSH_RC_SESSION_PATH} )
if( ${?TCSH_RC_SOURCE_FILE} ) then
	unsetenv TCSH_RC_SOURCE_FILE;
endif
setenv TCSH_RC_SESSION_PATH "/projects/cli/console.pallet/tcshrc";
source "${TCSH_RC_SESSION_PATH}/argv:check" "etc-csh.logout" "${argv}";
if( $args_handled > 0 ) then
	@ args_shifted=0;
	while( $args_shifted < $args_handled )
		@ args_shifted++;
		shift;
	end
	unset args_shifted;
endif
unset args_handled;


if(! ${?histfile} ) \
	source "${TCSH_RC_SESSION_PATH}/history.cshrc.tcsh";

set status=-1;
@ lock_step=0;
while( -e "${histfile}.lock" )
	sleep 1;
	@ lock_step++;
	if( ${lock_step} > 20 ) then
		printf "History access is locked and the timeout has exceeded.\n\t%s exisits.\n" "${histfile}.lock";
		goto exit_script;
	endif
end

touch "${histfile}.lock";
jobs >! "${histfile}.jobs";
if(! ${?logout_force} ) then
	set status=-1;
	jobs >! "${histfile}.jobs";
	if( "`cat '${histfile}.jobs'`" != "" ) then
		printf "There background jobs are currently running:\n";
		cat "${histfile}.jobs";
		printf "\nset logout_force to skip this test.\n";
		/bin/rm -fv "${histfile}.jobs";
		/bin/rm -fv "${histfile}.lock";
		set status=-1;
		goto exit_script;
	endif
endif

set status=0;
if( -e "${histfile}.lock" )	\
	rm -fv "${histfile}.lock";

if( -e "${histfile}.jobs" )	\
	rm -fv "${histfile}.jobs";

source "${TCSH_RC_SESSION_PATH}/logout.cshrc.tcsh";

exit_script:
	source "${TCSH_RC_SESSION_PATH}/argv:clean-up" "etc-csh.cshrc";
	exit ${status};
#exit_script:

