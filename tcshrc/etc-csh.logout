#!/bin/tcsh -f
	if( ${?TCSH_RC_SOURCE_FILE} ) \
		unsetenv TCSH_RC_SOURCE_FILE;
	
	if( ${?TCSH_RC_DEBUG} ) \
		unsetenv TCSH_RC_DEBUG;
	
	setenv TCSH_RC_PATH "/projects/cli/console.pallet";
	setenv TCSH_RC_SESSION_PATH "${TCSH_RC_PATH}/tcshrc";
	
source "${TCSH_RC_SESSION_PATH}/argv:check" "etc-csh.logout" ${argv};
if( $args_handled > 0 ) then
	@ args_shifted=0;
	while( $args_shifted < $args_handled )
		@ args_shifted++;
		shift;
	end
	unset args_shifted;
endif
unset args_handled;

	@ errno=0;
	
	if( -e "${histfile}.lock" ) then
		@ errno=-1;
		@ lock_step=0;
		while( -e "${histfile}.lock" )
			sleep 1;
			@ lock_step++;
			if( ${lock_step} > 20 ) then
				printf "History access is locked and the timeout has exceeded.\n\t%s exisits.\n" "${histfile}.lock";
				goto exit_script;
			endif
		end
	endif

	if( ${?logout_force} ) then
		@ errno=0;
		goto exit_script;
	endif

	touch "${histfile}.lock";
	jobs >! "${histfile}.jobs";
	if( "`cat '${histfile}.jobs'`" == "" ) then
		@ errrno=0;
		goto exit_script;
	endif
	
	@ errno=-1;
	printf "There background jobs are currently running:\n";
	cat "${histfile}.jobs";
	printf "\nset logout_force to skip this test.\n";

exit_script:
	if(! ${?errno} ) \
		@ errno=0;
	
	if( $errno == 0 ) \
		source "${TCSH_RC_SESSION_PATH}/logout.cshrc.tcsh" $argv;
	
	if( -e "${histfile}.lock" ) \
		/bin/rm -fv "${histfile}.lock";
	
	if( -e "${histfile}.jobs" ) \
		/bin/rm -fv "${histfile}.jobs";
	
	source "${TCSH_RC_SESSION_PATH}/argv:clean-up" "etc-csh.logout";
	
	set status=$errno;
	exit ${status};
#exit_script:

