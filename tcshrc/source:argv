#!/bin/tcsh -f

init:
	if(! ${?TCSH_RC_SESSION_PATH} ) \
		setenv TCSH_RC_SESSION_PATH "/projects/cli/console.pallet/tcshrc";
	set scripts_basename="source:argv";
	goto parse_argv; # exit's via 'usage:' or 'main:'.
#init:


exit_script:
	if( ${?debug} ) \
		unset debug;
	if( ${?use_old_owd} ) then
		cd "${owd}";
		set owd="${use_old_owd}";
		unset use_old_owd;
	endif
	if(! ${?errno} ) \
		@ errno=0;

	if( ${?usage_message} )\
		unset usage_message;
	if( ${?source_file} )\
		unset source_file;
	if( ${?dashes} )\
		unset dashes;
	if( ${?option} )\
		unset option;
	if( ${?value} )\
		unset value;
	if( ${?equals} )\
		unset equals;
	if( ${?my_arg} ) \
		unset my_arg;
	
	set status=$errno;
	unset scripts_basename;
	exit ${errno};
#exit_script:


usage:
	printf "Usage:\n\t%s [options]\n\tPossible options are:\n\t\t[-h|--help]\tDisplays this screen.\n" "${scripts_basename}";
	@ errno=-1;
	goto exit_script;
#usage:



parse_argv:
	@ my_argc=${#argv};
	
	if( ${my_argc} == 0 ) \
		goto main;
	
	@ my_arg=0;
	while( $my_arg < $my_argc )
		@ my_arg++;
		if( "$argv[$my_arg]" != "--debug" ) \
			continue;
		set argv[$my_arg]="";
		printf "Enabling debug mode (via "\$"argv[%d]\n" $my_arg;
		set debug;
		break;
	end
	if( ${my_arg} > 1 ) \
		@ my_arg=0;
	
	if( ${?debug} ) \
		printf "Checking %s's argv options.  %d total.\n" "${scripts_basename}" "${my_argc}";
#parse_argv:

parse_arg:
while( $my_arg < $my_argc )
	@ my_arg++;
	if( ${?TCSH_RC_DEBUG} || ${?debug} ) \
		printf "Checking "\$"argv["\$"arg], %d of %d's value: %s\n" "${my_arg}" "${my_argc}" "$argv[$my_arg]";
	
	set dashes="`printf "\""$argv[$my_arg]"\"" | sed -r 's/([\-]{1,2})([^=]+)(=)?(.*)"\$"/\1/'`";
	if( "${dashes}" == "$argv[$my_arg]" ) \
		set dashes="";
	
	set option="`printf "\""$argv[$my_arg]"\"" | sed -r 's/([\-]{1,2})([^=]+)(=)?(.*)"\$"/\2/'`";
	if( "${option}" == "$argv[$my_arg]" ) \
		set option="";
	
	set equals="";
	set value="`printf "\""$argv[$my_arg]"\"" | sed -r 's/([\-]{1,2})([^=]+)(=)?(.*)"\$"/\3/'`";
	if( "${value}" == "$argv[$my_arg]" ) then
		set value="";
	else
		set equals="=";
	endif
	
	if( ${?debug} ) \
		printf "Checking "\$"argv[%d] (%s).\n\tParsed option: %s%s%s%s\n" "${my_arg}" "$argv[$my_arg]" "${dashes}" "${option}" "${equals}" "${value}";
	
	switch( "${option}" )
		case "debug":
			breaksw;
		
		case "usage":
			if( "${value}" == "" ) then
				@ my_arg++;
				if( $my_arg > $my_argc ) \
					continue;
				set usage_message="$argv[$my_arg]";
			else
				set usage_message="${value}";
			endif
			breaksw;
		
		default:
			if( -e "${TCSH_RC_SESSION_PATH}/$argv[$my_arg]" ) then
				set source_file="${TCSH_RC_SESSION_PATH}/$argv[$my_arg]";
			else if( -e "$argv[$my_arg]" ) then
				set source_file="$argv[$my_arg]";
			endif
			
			if(! ${?source_file} ) then
				if( ${?TCSH_RC_DEBUG} || ${?debug} ) \
					printf "**ERROR:** cannot source %s could not be found.\n" "$argv[$my_arg]";
				unset source_file;
				continue;
			endif
			
			if( ${?TCSH_RC_DEBUG} || ${?debug} ) then
				if( ${?usage_message} ) then
					printf "%s @ %s\n" "${usage_message}" "`date '+%I:%M:%S%P'`";
				else
					printf "Sourcing %s @ %s.\n" "${source_file}" "`date '+%I:%M:%S%P'`";
				endif
			endif
			
			source "${source_file}";
			
			if( ${?TCSH_RC_DEBUG} || ${?debug} ) then
				if( ${?usage_message} ) then
					printf "Finished %s @ %s\n" "${usage_message}" "`date '+%I:%M:%S%P'`";
				else
					printf "Finished sourcing: <%s> @ %s.\n" "${source_file}" "`date '+%I:%M:%S%P'`";
					unset usage_message;
				endif
			endif
			unset source_file;
		breaksw;
	endsw
	unset dashes option value equals;
end

